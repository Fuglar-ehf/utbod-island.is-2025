global:
  env:
    AUDIT_GROUP_NAME: '/identity-server/audit-log'
    AWS_REGION: 'eu-west-1'
    PORT: '3333'
    name: 'prod'
  image:
    tag: 'latest_master'
  initContainer:
    env:
      AWS_REGION: 'eu-west-1'
identity-server:
  enabled: true
  env:
    ASPNETCORE_URLS: 'http://*:5000'
    AWS__CloudWatch__AuditLogGroup: '/identity-server/audit-log'
    AWS__SystemsManager__ParameterStore__DataProtectionPrefix: '/k8s/identity-server/DataProtectionSecret'
    Application__MinCompletionPortThreads: '10'
    AudkenniSettings__Retries: '24'
    CORECLR_ENABLE_PROFILING: '1'
    CORECLR_PROFILER: '{846F5F1C-F9AE-4B07-969E-05C26BC060D8}'
    CORECLR_PROFILER_PATH: '/opt/datadog/Datadog.Trace.ClrProfiler.Native.so'
    CacheSettings__Enabled: 'true'
    CacheSettings__Memcached__Address: 'identity-server.dnugi2.cfg.euw1.cache.amazonaws.com'
    CacheSettings__Memcached__Port: '11211'
    CacheSettings__Redis__Address: 'clustercfg.general-redis-cluster-group.dnugi2.euw1.cache.amazonaws.com'
    CacheSettings__Redis__Port: '6379'
    DD_DOTNET_TRACER_HOME: '/opt/datadog'
    DD_INTEGRATIONS: '/opt/datadog/integrations.json'
    Datadog__Metrics__Port: '5003'
    IdentityServer__EnableFakeLogin: 'true'
    IdentityServer__EnableFeatureDeploymentWildcards: 'false'
    IdentityServer__SigningCertificate__Path: '/etc/config/ids-signing.pfx'
    NODE_OPTIONS: '--max-old-space-size=208'
    PersistenceSettings__BaseAddress: 'http://web-services-auth-api'
    PersistenceSettings__UserProfileBaseAddress: 'http://web-service-portal-api.service-portal.svc.cluster.local'
    SERVERSIDE_FEATURES_ON: 'driving-license-use-v1-endpoint-for-v2-comms'
  files:
    - 'ids-signing.pfx'
  grantNamespaces: []
  grantNamespacesEnabled: false
  healthCheck:
    liveness:
      initialDelaySeconds: 3
      path: '/liveness'
      timeoutSeconds: 3
    port: 5010
    readiness:
      initialDelaySeconds: 3
      path: '/readiness'
      timeoutSeconds: 3
  hpa:
    scaling:
      metric:
        cpuAverageUtilization: 70
        nginxRequestsIrate: 2
      replicas:
        max: 10
        min: 3
  image:
    repository: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/identity-server'
  ingress:
    primary-alb:
      annotations:
        kubernetes.io/ingress.class: 'nginx-external-alb'
        nginx.ingress.kubernetes.io/proxy-buffer-size: '8k'
        nginx.ingress.kubernetes.io/proxy-buffering: 'on'
      hosts:
        - host: 'innskra.island.is'
          paths:
            - '/'
  namespace: 'identity-server'
  podSecurityContext:
    fsGroup: 65534
  replicaCount:
    default: 3
    max: 10
    min: 3
  resources:
    limits:
      cpu: '400m'
      memory: '256Mi'
    requests:
      cpu: '100m'
      memory: '128Mi'
  secrets:
    AudkenniSettings__ClientId: '/k8s/identity-server/AudkenniClientId'
    AudkenniSettings__ClientSecret: '/k8s/identity-server/AudkenniClientSecret'
    CONFIGCAT_SDK_KEY: '/k8s/configcat/CONFIGCAT_SDK_KEY'
    FeatureFlags__ConfigCatSdkKey: '/k8s/configcat/CONFIGCAT_SDK_KEY'
    IdentityServer__FakePersons: '/k8s/identity-server/FakePersons'
    IdentityServer__SigningCertificate__Passphrase: '/k8s/identity-server/SigningCertificatePassphrase'
    PersistenceSettings__AccessTokenManagementSettings__ClientSecret: '/k8s/identity-server/ClientSecret'
    Scopes__Admin__RootAccessList: '/k8s/identity-server/AdminRootAccessList'
  securityContext:
    allowPrivilegeEscalation: false
    privileged: false
  service:
    targetPort: 5000
  serviceAccount:
    annotations:
      eks.amazonaws.com/role-arn: 'arn:aws:iam::567113216315:role/identity-server'
    create: true
    name: 'identity-server'
namespaces:
  labels: {}
  namespaces:
    - 'identity-server'
