{
  "openapi": "3.0.0",
  "paths": {
    "/api/v1/advert": {
      "get": {
        "operationId": "JournalController_advert",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Journal advert by ID.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/JournalAdvert" }
              }
            }
          },
          "404": {
            "description": "Advert not found.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertNotFound" }
              }
            }
          }
        }
      }
    },
    "/api/v1/adverts": {
      "get": {
        "operationId": "JournalController_adverts",
        "parameters": [
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of journal adverts, optional query parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JournalAdvertsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/validate": {
      "get": {
        "operationId": "JournalController_validate",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/JournalAdvert" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Validation success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JournalValidateSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JournalValidateErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/submit": {
      "post": {
        "operationId": "JournalController_submit",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/JournalAdvert" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Validation success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JournalValidateSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JournalValidateErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/error": {
      "get": {
        "operationId": "JournalController_error",
        "parameters": [],
        "responses": {
          "500": {
            "description": "Explicit error from service to test logging."
          }
        }
      }
    },
    "/api/v1/health": {
      "get": {
        "operationId": "JournalController_health",
        "parameters": [],
        "responses": { "200": { "description": "Health check endpoint." } }
      }
    }
  },
  "info": {
    "title": "The Official Journal of Iceland API",
    "description": "API for advarts and publication in the Official Journal of Iceland.",
    "version": "0.1",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "schemas": {
      "JournalAdvertPublicationNumber": {
        "type": "object",
        "properties": {
          "number": {
            "type": "number",
            "description": "Serial number of the publication number.",
            "example": "1"
          },
          "year": {
            "type": "number",
            "description": "Year of the publication number.",
            "example": "2024"
          },
          "full": {
            "type": "string",
            "description": "Full publication number, with both `number` and `year` separated with `/`.",
            "example": "1/2024"
          }
        },
        "required": ["number", "year", "full"]
      },
      "JournalAdvertCategory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID for the advert category, GUID format.",
            "example": "00000000-0000-0000-0000-000000000000",
            "nullable": false
          },
          "name": {
            "type": "string",
            "description": "Name of the advert category.",
            "example": "Evrópska efnahagssvæðið"
          },
          "slug": {
            "type": "string",
            "description": "Slug of the advert category, used in URLs and API requests.",
            "example": "evropska-efnahagssvaedid"
          }
        },
        "required": ["id", "name", "slug"]
      },
      "JournalInvolvedParty": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID for the involved party, GUID format.",
            "example": "00000000-0000-0000-0000-000000000000",
            "nullable": false
          },
          "name": {
            "type": "string",
            "description": "Name of the involved party.",
            "example": "Umhverfis- og skipulagssvið Reykjavíkurborgar",
            "nullable": false
          }
        },
        "required": ["id", "name"]
      },
      "JournalDocument": {
        "type": "object",
        "properties": {
          "isLegacy": {
            "type": "boolean",
            "description": "Is the `html` from the legacy system?",
            "example": "false"
          },
          "html": {
            "type": "string",
            "description": "Full HTML for the advert, either generated by new system or legacy system based on `isLegacy`.",
            "example": "<html string>",
            "nullable": true
          },
          "pdfUrl": {
            "type": "string",
            "description": "URL for the generated PDF file.",
            "example": "<url>",
            "nullable": true
          }
        },
        "required": ["isLegacy", "html"]
      },
      "JournalAdvert": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID for the advert, GUID format.",
            "example": "00000000-0000-0000-0000-000000000000",
            "nullable": false
          },
          "department": {
            "type": "string",
            "enum": ["A deild", "B deild", "C deild"],
            "description": "The department the advert is for.",
            "nullable": false,
            "example": "A deild"
          },
          "type": {
            "type": "string",
            "description": "Type of the advert, always uppercased. Must be available under the given `department`.",
            "example": "GJALDSKRÁ"
          },
          "subject": {
            "type": "string",
            "description": "Subject of the advert, always dependant on the `type`.",
            "example": "fyrir hundahald í Reykjavíkurborg."
          },
          "title": {
            "type": "string",
            "description": "Title of the advert with both `type` and `subject`.",
            "example": "GJALDSKRÁ fyrir hundahald í Reykjavíkurborg."
          },
          "status": {
            "type": "string",
            "enum": [
              "Virk",
              "Afturkölluð",
              "Drög",
              "Eldri auglýsing",
              "Hafnað",
              "Í bið",
              "Í vinnslu",
              "Innsend",
              "Tilbúin til útgáfu",
              "Útgefin"
            ],
            "description": "Status of the advert",
            "nullable": false,
            "example": "Virk"
          },
          "publicationNumber": {
            "description": "Publication number of the advert",
            "nullable": true,
            "allOf": [
              { "$ref": "#/components/schemas/JournalAdvertPublicationNumber" }
            ]
          },
          "createdDate": {
            "type": "string",
            "description": "Date the advert was created. ISO 8601 date and time format in UTC.",
            "nullable": false,
            "example": "2024-01-01T09:00:00Z"
          },
          "updatedDate": {
            "type": "string",
            "description": "Date the advert was last updated. ISO 8601 date and time format in UTC.",
            "nullable": false,
            "example": "2024-01-20T09:00:00Z"
          },
          "signatureDate": {
            "type": "object",
            "description": "Date the advert was signed, can be null. ISO 8601 date and time format in UTC.",
            "nullable": true,
            "example": "2024-01-10T16:00:00Z"
          },
          "publicationDate": {
            "type": "object",
            "description": "Date the advert was signed, can be null. ISO 8601 date and time format in UTC.",
            "nullable": true,
            "example": "2024-01-20T09:00:00Z"
          },
          "categories": {
            "description": "List of advert categories.",
            "nullable": false,
            "type": "array",
            "items": { "$ref": "#/components/schemas/JournalAdvertCategory" }
          },
          "involvedParty": {
            "description": "Involved party for the advert.",
            "nullable": false,
            "allOf": [{ "$ref": "#/components/schemas/JournalInvolvedParty" }]
          },
          "document": {
            "description": "Advert document in different formats.",
            "nullable": false,
            "allOf": [{ "$ref": "#/components/schemas/JournalDocument" }]
          }
        },
        "required": [
          "id",
          "department",
          "type",
          "title",
          "status",
          "publicationNumber",
          "createdDate",
          "updatedDate",
          "signatureDate",
          "publicationDate",
          "categories",
          "involvedParty",
          "document"
        ]
      },
      "AdvertNotFound": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "object",
            "description": "HTTP status code of response"
          },
          "message": { "type": "string", "description": "Response message" }
        },
        "required": ["statusCode", "message"]
      },
      "JournalPaging": {
        "type": "object",
        "properties": {
          "page": { "type": "number", "example": 1 },
          "totalPages": { "type": "number", "example": 10 },
          "totalItems": { "type": "number", "example": 1000 },
          "nextPage": { "type": "number", "example": 2 },
          "previousPage": { "type": "object", "example": 1, "nullable": true },
          "pageSize": {
            "type": "number",
            "example": 10,
            "minimum": 1,
            "maximum": 100
          },
          "hasNextPage": { "type": "boolean", "example": true },
          "hasPreviousPage": { "type": "boolean", "example": false }
        },
        "required": [
          "page",
          "totalPages",
          "totalItems",
          "nextPage",
          "previousPage",
          "pageSize",
          "hasNextPage",
          "hasPreviousPage"
        ]
      },
      "JournalAdvertsResponse": {
        "type": "object",
        "properties": {
          "adverts": {
            "description": "List of adverts",
            "type": "array",
            "items": { "$ref": "#/components/schemas/JournalAdvert" }
          },
          "paging": {
            "description": "Paging info",
            "allOf": [{ "$ref": "#/components/schemas/JournalPaging" }]
          }
        },
        "required": ["adverts", "paging"]
      },
      "JournalValidateSuccessResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status is always success",
            "enum": ["success", "error"],
            "example": "success"
          }
        },
        "required": ["status"]
      },
      "JournalError": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string",
            "description": "Field name / path to the property",
            "example": "advert.title"
          },
          "message": {
            "type": "string",
            "description": "Message describing the error",
            "example": "Advert title must be atleast 10 characters long"
          }
        },
        "required": ["path", "message"]
      },
      "JournalValidateErrorResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status is always error",
            "enum": ["success", "error"],
            "example": "error"
          },
          "errors": {
            "description": "Array of errors",
            "type": "array",
            "items": { "$ref": "#/components/schemas/JournalError" }
          }
        },
        "required": ["status", "errors"]
      }
    }
  }
}
