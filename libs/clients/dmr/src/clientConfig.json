{
  "openapi": "3.0.0",
  "paths": {
    "/api/v1/advert": {
      "get": {
        "operationId": "JournalController_advert",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Journal advert by ID.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/JournalAdvert" }
              }
            }
          },
          "404": {
            "description": "Advert not found.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertNotFound" }
              }
            }
          }
        }
      }
    },
    "/api/v1/adverts": {
      "get": {
        "operationId": "JournalController_adverts",
        "parameters": [
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "String to search for in adverts.",
            "schema": { "type": "string" }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number to return.",
            "schema": { "type": "number" }
          },
          {
            "name": "department",
            "required": false,
            "in": "query",
            "description": "One or more departments (by `slug`) to filter on.",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "type",
            "required": false,
            "in": "query",
            "description": "One or more types (by `slug`) to filter on.",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "category",
            "required": false,
            "in": "query",
            "description": "One or more categories (by `slug`) to filter on.",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "involvedParty",
            "required": false,
            "in": "query",
            "description": "One or more involved parties (by `slug`) to filter on.",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "dateFrom",
            "required": false,
            "in": "query",
            "description": "Date from which to filter adverts on, inclusive, takes into account `createdDate`, `updatedDate` and `signatureDate`.",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "name": "dateTo",
            "required": false,
            "in": "query",
            "description": "Date to which to filter adverts on, inclusive, takes into account `createdDate`, `updatedDate` and `signatureDate`.",
            "schema": { "format": "date-time", "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of journal adverts, optional query parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JournalAdvertsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Query string validation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JournalAdvertsValidationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/departments": {
      "get": {
        "operationId": "JournalController_departments",
        "parameters": [
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "String to search for in departments.",
            "schema": { "type": "string" }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number to return.",
            "schema": { "type": "number" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of journal advert departments.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JournalAdvertDepartmentsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Query string validation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JournalAdvertsValidationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/types": {
      "get": {
        "operationId": "JournalController_types",
        "parameters": [
          {
            "name": "department",
            "required": false,
            "in": "query",
            "description": "Department slug to get categories for.",
            "schema": { "type": "string" }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "String to search for in types.",
            "schema": { "type": "string" }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number to return.",
            "schema": { "type": "number" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of journal advert types.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JournalAdvertTypesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Query string validation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JournalAdvertsValidationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/categories": {
      "get": {
        "operationId": "JournalController_categories",
        "parameters": [
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "String to search for in categories.",
            "schema": { "type": "string" }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number to return.",
            "schema": { "type": "number" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of journal advert types.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JournalAdvertCategoriesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Query string validation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JournalAdvertsValidationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/application": {
      "post": {
        "operationId": "JournalController_application",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JournalPostApplicationBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Submit a journal advert application",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JournalPostApplicationResponse"
                }
              }
            }
          },
          "400": { "description": "Validation failed." }
        }
      }
    },
    "/api/v1/error": {
      "get": {
        "operationId": "JournalController_error",
        "parameters": [],
        "responses": {
          "500": {
            "description": "Explicit error from service to test logging."
          }
        }
      }
    },
    "/api/v1/health": {
      "get": {
        "operationId": "JournalController_health",
        "parameters": [],
        "responses": { "200": { "description": "Health check endpoint." } }
      }
    }
  },
  "info": {
    "title": "The Official Journal of Iceland API",
    "description": "API for advarts and publication in the Official Journal of Iceland.",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "schemas": {
      "JournalAdvertDepartment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID for the advert department, GUID format.",
            "example": "00000000-0000-0000-0000-000000000000",
            "nullable": false
          },
          "title": {
            "type": "string",
            "description": "Title of the advert department.",
            "example": "A deild"
          },
          "slug": {
            "type": "string",
            "description": "Slug of the advert department, used in URLs and API requests.",
            "example": "a-deild"
          }
        },
        "required": ["id", "title", "slug"]
      },
      "JournalAdvertType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID for the advert type, GUID format.",
            "example": "00000000-0000-0000-0000-000000000000",
            "nullable": false
          },
          "title": {
            "type": "string",
            "description": "Title of the advert type, always uppercased.",
            "example": "AUGLÝSING"
          },
          "slug": {
            "type": "string",
            "description": "Slug of the advert type, used in URLs and API requests.",
            "example": "auglysing"
          },
          "department": {
            "description": "Department the advert type belongs to.",
            "nullable": false,
            "allOf": [
              { "$ref": "#/components/schemas/JournalAdvertDepartment" }
            ]
          }
        },
        "required": ["id", "title", "slug", "department"]
      },
      "JournalAdvertPublicationNumber": {
        "type": "object",
        "properties": {
          "number": {
            "type": "number",
            "description": "Serial number of the publication number.",
            "example": "1"
          },
          "year": {
            "type": "number",
            "description": "Year of the publication number.",
            "example": "2024"
          },
          "full": {
            "type": "string",
            "description": "Full publication number, with both `number` and `year` separated with `/`.",
            "example": "1/2024"
          }
        },
        "required": ["number", "year", "full"]
      },
      "JournalAdvertCategory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID for the advert category, GUID format.",
            "example": "00000000-0000-0000-0000-000000000000",
            "nullable": false
          },
          "title": {
            "type": "string",
            "description": "Title of the advert category.",
            "example": "Evrópska efnahagssvæðið"
          },
          "slug": {
            "type": "string",
            "description": "Slug of the advert category, used in URLs and API requests.",
            "example": "evropska-efnahagssvaedid"
          }
        },
        "required": ["id", "title", "slug"]
      },
      "JournalInvolvedParty": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID for the involved party, GUID format.",
            "example": "00000000-0000-0000-0000-000000000000",
            "nullable": false
          },
          "title": {
            "type": "string",
            "description": "Title of the involved party.",
            "example": "Umhverfis- og skipulagssvið Reykjavíkurborgar",
            "nullable": false
          },
          "slug": {
            "type": "string",
            "description": "Slug of the involved party, used in URLs and API requests.",
            "example": "umhvefis-og-skipulagssvid-reykjavikurborgar"
          }
        },
        "required": ["id", "title", "slug"]
      },
      "JournalDocument": {
        "type": "object",
        "properties": {
          "isLegacy": {
            "type": "boolean",
            "description": "Is the `html` from the legacy system?",
            "example": "false"
          },
          "html": {
            "type": "string",
            "description": "Full HTML for the advert, either generated by new system or legacy system based on `isLegacy`.",
            "example": "<html string>",
            "nullable": true
          },
          "pdfUrl": {
            "type": "string",
            "description": "URL for the generated PDF file.",
            "example": "<url>",
            "nullable": true
          }
        },
        "required": ["isLegacy", "html"]
      },
      "JournalAdvert": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID for the advert, GUID format.",
            "example": "00000000-0000-0000-0000-000000000000",
            "nullable": false
          },
          "department": {
            "description": "The department the advert is for.",
            "nullable": false,
            "example": "A deild",
            "allOf": [
              { "$ref": "#/components/schemas/JournalAdvertDepartment" }
            ]
          },
          "type": {
            "description": "Type of the advert.",
            "example": "GJALDSKRÁ",
            "allOf": [{ "$ref": "#/components/schemas/JournalAdvertType" }]
          },
          "subject": {
            "type": "string",
            "description": "Subject of the advert, always dependant on the `type`.",
            "example": "fyrir hundahald í Reykjavíkurborg."
          },
          "title": {
            "type": "string",
            "description": "Title of the advert with both `type` and `subject`.",
            "example": "GJALDSKRÁ fyrir hundahald í Reykjavíkurborg."
          },
          "status": {
            "type": "string",
            "enum": [
              "Virk",
              "Afturkölluð",
              "Drög",
              "Eldri auglýsing",
              "Hafnað",
              "Í bið",
              "Í vinnslu",
              "Innsend",
              "Tilbúin til útgáfu",
              "Útgefin"
            ],
            "description": "Status of the advert",
            "nullable": false,
            "example": "Virk"
          },
          "publicationNumber": {
            "description": "Publication number of the advert",
            "nullable": true,
            "allOf": [
              { "$ref": "#/components/schemas/JournalAdvertPublicationNumber" }
            ]
          },
          "createdDate": {
            "type": "string",
            "description": "Date the advert was created. ISO 8601 date and time format in UTC.",
            "nullable": false,
            "example": "2024-01-01T09:00:00Z"
          },
          "updatedDate": {
            "type": "string",
            "description": "Date the advert was last updated. ISO 8601 date and time format in UTC.",
            "nullable": false,
            "example": "2024-01-20T09:00:00Z"
          },
          "signatureDate": {
            "type": "string",
            "description": "Date the advert was signed, can be null. ISO 8601 date and time format in UTC.",
            "nullable": true,
            "example": "2024-01-10T16:00:00Z"
          },
          "publicationDate": {
            "type": "string",
            "description": "Date the advert was signed, can be null. ISO 8601 date and time format in UTC.",
            "nullable": true,
            "example": "2024-01-20T09:00:00Z"
          },
          "categories": {
            "description": "List of advert categories.",
            "nullable": false,
            "type": "array",
            "items": { "$ref": "#/components/schemas/JournalAdvertCategory" }
          },
          "involvedParty": {
            "description": "Involved party for the advert.",
            "nullable": false,
            "allOf": [{ "$ref": "#/components/schemas/JournalInvolvedParty" }]
          },
          "document": {
            "description": "Advert document in different formats.",
            "nullable": false,
            "allOf": [{ "$ref": "#/components/schemas/JournalDocument" }]
          }
        },
        "required": [
          "id",
          "department",
          "type",
          "title",
          "status",
          "publicationNumber",
          "createdDate",
          "updatedDate",
          "signatureDate",
          "publicationDate",
          "categories",
          "involvedParty",
          "document"
        ]
      },
      "AdvertNotFound": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number",
            "description": "HTTP status code of response"
          },
          "message": { "type": "string", "description": "Response message" }
        },
        "required": ["statusCode", "message"]
      },
      "JournalPaging": {
        "type": "object",
        "properties": {
          "page": { "type": "number", "example": 1 },
          "totalPages": { "type": "number", "example": 10 },
          "totalItems": { "type": "number", "example": 1000 },
          "nextPage": { "type": "number", "example": 2, "nullable": true },
          "previousPage": { "type": "number", "example": 1, "nullable": true },
          "pageSize": {
            "type": "number",
            "example": 10,
            "minimum": 1,
            "maximum": 100
          },
          "hasNextPage": { "type": "boolean", "example": true },
          "hasPreviousPage": { "type": "boolean", "example": false }
        },
        "required": [
          "page",
          "totalPages",
          "totalItems",
          "nextPage",
          "previousPage",
          "pageSize",
          "hasNextPage",
          "hasPreviousPage"
        ]
      },
      "JournalAdvertsResponse": {
        "type": "object",
        "properties": {
          "adverts": {
            "description": "List of adverts",
            "type": "array",
            "items": { "$ref": "#/components/schemas/JournalAdvert" }
          },
          "paging": {
            "description": "Paging info",
            "allOf": [{ "$ref": "#/components/schemas/JournalPaging" }]
          }
        },
        "required": ["adverts", "paging"]
      },
      "JournalAdvertsValidationResponse": {
        "type": "object",
        "properties": {
          "message": {
            "description": "Array of error messages",
            "example": [
              "message must be shorter than or equal to 10 characters"
            ],
            "type": "array",
            "items": { "type": "string" }
          },
          "error": {
            "type": "string",
            "description": "Error type",
            "example": "Bad Request"
          },
          "statusCode": {
            "type": "number",
            "description": "HTTP status code of response",
            "example": 400
          }
        },
        "required": ["message", "statusCode"]
      },
      "JournalAdvertDepartmentsResponse": {
        "type": "object",
        "properties": {
          "departments": {
            "description": "List of advert epartments",
            "type": "array",
            "items": { "$ref": "#/components/schemas/JournalAdvertDepartment" }
          },
          "paging": {
            "description": "Paging info",
            "allOf": [{ "$ref": "#/components/schemas/JournalPaging" }]
          }
        },
        "required": ["departments", "paging"]
      },
      "JournalAdvertTypesResponse": {
        "type": "object",
        "properties": {
          "types": {
            "description": "List of advert types",
            "type": "array",
            "items": { "$ref": "#/components/schemas/JournalAdvertType" }
          },
          "paging": {
            "description": "Paging info",
            "allOf": [{ "$ref": "#/components/schemas/JournalPaging" }]
          }
        },
        "required": ["types", "paging"]
      },
      "JournalAdvertCategoriesResponse": {
        "type": "object",
        "properties": {
          "categories": {
            "description": "List of advert categories",
            "type": "array",
            "items": { "$ref": "#/components/schemas/JournalAdvertCategory" }
          },
          "paging": {
            "description": "Paging info",
            "allOf": [{ "$ref": "#/components/schemas/JournalPaging" }]
          }
        },
        "required": ["categories", "paging"]
      },
      "JournalPostApplicationBody": {
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "string",
            "description": "Application id",
            "example": "00000000-0000-0000-0000-000000000000",
            "nullable": false
          },
          "department": {
            "type": "string",
            "description": "Application selected department id",
            "example": "00000000-0000-0000-0000-000000000000",
            "nullable": false
          },
          "type": {
            "type": "string",
            "description": "Application selected type id",
            "example": "00000000-0000-0000-0000-000000000000",
            "nullable": false
          },
          "categories": {
            "description": "Application selected array of categories ids",
            "example": [
              "00000000-0000-0000-0000-000000000000",
              "11111111-1111-1111-1111-111111111111"
            ],
            "nullable": false,
            "type": "array",
            "items": { "type": "string" }
          },
          "subject": {
            "type": "string",
            "description": "Subject of the submitted application",
            "example": "um hundahald í Reykjavíkurborg",
            "nullable": false
          },
          "requestedPublicationDate": {
            "type": "string",
            "description": "Requested publication date of the advert in the submitted application",
            "example": "2006-10-17 00:00:00.0000",
            "nullable": false
          },
          "document": {
            "type": "string",
            "description": "Contents of the advert's document in the submitted application (HTML string)",
            "example": "<p>GJALDSKRÁ um hundahald í Reykjavík</p><div><p>Dagur B. Eggertsson</p></div>",
            "nullable": false
          }
        },
        "required": [
          "applicationId",
          "department",
          "type",
          "categories",
          "subject",
          "requestedPublicationDate",
          "document"
        ]
      },
      "JournalPostApplicationResponse": {
        "type": "object",
        "properties": {
          "advert": {
            "description": "Return the submitted application",
            "allOf": [{ "$ref": "#/components/schemas/JournalAdvert" }]
          }
        },
        "required": ["advert"]
      }
    }
  }
}
