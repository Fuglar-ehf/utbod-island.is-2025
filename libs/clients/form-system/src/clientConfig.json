{
  "openapi": "3.0.0",
  "paths": {
    "/liveness": {
      "get": {
        "operationId": "InfraController_liveness",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Liveness"
                }
              }
            }
          }
        },
        "tags": [
          "internal"
        ]
      }
    },
    "/version": {
      "get": {
        "operationId": "InfraController_version",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Version"
                }
              }
            }
          }
        },
        "tags": [
          "internal"
        ]
      }
    },
    "/health/check": {
      "get": {
        "operationId": "HealthController_check",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The Health Check is successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ok"
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "nullable": true
                    },
                    "error": {
                      "type": "object",
                      "example": {},
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "nullable": true
                    },
                    "details": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "The Health Check is not successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "nullable": true
                    },
                    "error": {
                      "type": "object",
                      "example": {
                        "redis": {
                          "status": "down",
                          "message": "Could not connect"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "nullable": true
                    },
                    "details": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        },
                        "redis": {
                          "status": "down",
                          "message": "Could not connect"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organizations": {
      "post": {
        "operationId": "OrganizationsController_create",
        "summary": "Create an organization",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrganizationDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Create an organization",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationDto"
                }
              }
            }
          }
        },
        "tags": [
          "organizations"
        ]
      },
      "get": {
        "operationId": "OrganizationsController_findAll",
        "summary": "Get all Organizations",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Get all Organizations",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationsResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "organizations"
        ]
      }
    },
    "/organizations/{id}": {
      "get": {
        "operationId": "OrganizationsController_findOne",
        "summary": "Get an organization by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Get an organization by id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationDto"
                }
              }
            }
          }
        },
        "tags": [
          "organizations"
        ]
      }
    },
    "/forms": {
      "post": {
        "operationId": "FormsController_create",
        "summary": "Create new form",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFormDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Create new form",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "forms"
        ]
      }
    },
    "/forms/organization/{organizationId}": {
      "get": {
        "operationId": "FormsController_findAll",
        "summary": "Get all forms belonging to organization",
        "parameters": [
          {
            "name": "organizationId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Get all forms belonging to organization",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "forms"
        ]
      }
    },
    "/forms/{id}": {
      "get": {
        "operationId": "FormsController_findOne",
        "summary": "Get FormResponse by formId",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Get FormResponse by formId",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "forms"
        ]
      },
      "put": {
        "operationId": "FormsController_updateForm",
        "summary": "Update form",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFormDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Update form"
          }
        },
        "tags": [
          "forms"
        ]
      },
      "delete": {
        "operationId": "FormsController_delete",
        "summary": "Delete form",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Delete field"
          }
        },
        "tags": [
          "forms"
        ]
      }
    },
    "/sections": {
      "post": {
        "operationId": "SectionsController_create",
        "summary": "Creates a new section",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSectionDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Creates a new section",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SectionDto"
                }
              }
            }
          }
        },
        "tags": [
          "sections"
        ]
      },
      "put": {
        "operationId": "SectionsController_updateDisplayOrder",
        "summary": "Update display order of sections",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSectionsDisplayOrderDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Update display order of sections"
          }
        },
        "tags": [
          "sections"
        ]
      }
    },
    "/sections/{id}": {
      "put": {
        "operationId": "SectionsController_update",
        "summary": "Updates a section",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSectionDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Updates a section"
          }
        },
        "tags": [
          "sections"
        ]
      },
      "delete": {
        "operationId": "SectionsController_delete",
        "summary": "Delete section by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Delete section by id"
          }
        },
        "tags": [
          "sections"
        ]
      }
    },
    "/screens": {
      "post": {
        "operationId": "ScreensController_create",
        "summary": "Creates a new screen",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateScreenDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Creates a new screen",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScreenDto"
                }
              }
            }
          }
        },
        "tags": [
          "screens"
        ]
      },
      "put": {
        "operationId": "ScreensController_updateDisplayOrder",
        "summary": "Update display order of screens",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateScreensDisplayOrderDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Update display order of screens"
          }
        },
        "tags": [
          "screens"
        ]
      }
    },
    "/screens/{id}": {
      "put": {
        "operationId": "ScreensController_update",
        "summary": "Updates screen",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateScreenDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Updates a screen",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScreenDto"
                }
              }
            }
          }
        },
        "tags": [
          "screens"
        ]
      },
      "delete": {
        "operationId": "ScreensController_delete",
        "summary": "Delete screen by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Delete screen by id"
          }
        },
        "tags": [
          "screens"
        ]
      }
    },
    "/fields": {
      "post": {
        "operationId": "FieldsController_create",
        "summary": "Create a field",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFieldDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Create a field",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FieldDto"
                }
              }
            }
          }
        },
        "tags": [
          "fields"
        ]
      },
      "put": {
        "operationId": "FieldsController_updateDisplayOrder",
        "summary": "Update display order of fields",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFieldsDisplayOrderDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Update display order of fields"
          }
        },
        "tags": [
          "fields"
        ]
      }
    },
    "/fields/{id}": {
      "put": {
        "operationId": "FieldsController_update",
        "summary": "Update field",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFieldDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Update field"
          }
        },
        "tags": [
          "fields"
        ]
      },
      "delete": {
        "operationId": "FieldsController_delete",
        "summary": "Delete field by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Delete field by id"
          }
        },
        "tags": [
          "fields"
        ]
      }
    },
    "/listItems": {
      "post": {
        "operationId": "ListItemsController_create",
        "summary": "Create a list item",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateListItemDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Create a list item",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListItemDto"
                }
              }
            }
          }
        },
        "tags": [
          "list items"
        ]
      },
      "put": {
        "operationId": "ListItemsController_updateDisplayOrder",
        "summary": "Update display order of list items",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateListItemsDisplayOrderDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Update display order of list items"
          }
        },
        "tags": [
          "list items"
        ]
      }
    },
    "/listItems/{id}": {
      "put": {
        "operationId": "ListItemsController_update",
        "summary": "Update list item",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateListItemDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Update list item"
          }
        },
        "tags": [
          "list items"
        ]
      },
      "delete": {
        "operationId": "ListItemsController_delete",
        "summary": "Delete list item",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Delete of list items"
          }
        },
        "tags": [
          "list items"
        ]
      }
    },
    "/applications/{id}": {
      "get": {
        "operationId": "ApplicationsController_getApplication",
        "summary": "Get an application by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Get an application by id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationDto"
                }
              }
            }
          }
        },
        "tags": [
          "applications"
        ]
      },
      "put": {
        "operationId": "ApplicationsController_update",
        "summary": "Update application dependencies",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateApplicationDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Update application dependencies"
          }
        },
        "tags": [
          "applications"
        ]
      }
    },
    "/applications/{slug}": {
      "post": {
        "operationId": "ApplicationsController_create",
        "summary": "Create new application",
        "parameters": [
          {
            "name": "slug",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateApplicationDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Create new application",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationDto"
                }
              }
            }
          }
        },
        "tags": [
          "applications"
        ]
      }
    },
    "/applications/submit/{id}": {
      "post": {
        "operationId": "ApplicationsController_submit",
        "summary": "Submit application",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Submit application"
          }
        },
        "tags": [
          "applications"
        ]
      }
    },
    "/applications/organization/{organizationId}": {
      "get": {
        "operationId": "ApplicationsController_findAll",
        "summary": "Get all applications belonging to organization",
        "parameters": [
          {
            "name": "organizationId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "isTest",
            "required": true,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Get all applications belonging to organization",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationListDto"
                }
              }
            }
          }
        },
        "tags": [
          "applications"
        ]
      }
    },
    "/values": {
      "post": {
        "operationId": "ValuesController_create",
        "summary": "Creates a new value",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateValueDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Creates a new value",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValueDto"
                }
              }
            }
          }
        },
        "tags": [
          "values"
        ]
      }
    },
    "/values/{id}": {
      "put": {
        "operationId": "ValuesController_update",
        "summary": "Update a value",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateValueDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Update a value",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValueDto"
                }
              }
            }
          }
        },
        "tags": [
          "values"
        ]
      },
      "delete": {
        "operationId": "ValuesController_delete",
        "summary": "Delete value by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Delete value by id"
          }
        },
        "tags": [
          "values"
        ]
      }
    },
    "/formApplicantTypes": {
      "post": {
        "operationId": "FormApplicantTypesController_create",
        "summary": "Add form applicant type",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFormApplicantTypeDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Add form applicant type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormApplicantTypeDto"
                }
              }
            }
          }
        },
        "tags": [
          "form applicant types"
        ]
      }
    },
    "/formApplicantTypes/{id}": {
      "put": {
        "operationId": "FormApplicantTypesController_update",
        "summary": "Update form applicant",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFormApplicantTypeDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Update form applicant"
          }
        },
        "tags": [
          "form applicant types"
        ]
      },
      "delete": {
        "operationId": "FormApplicantTypesController_delete",
        "summary": "Delete form applicant",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Delete form applicant"
          }
        },
        "tags": [
          "form applicant types"
        ]
      }
    },
    "/formCertificationTypes": {
      "post": {
        "operationId": "FormCertificationTypesController_create",
        "summary": "Add form certification type",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFormCertificationTypeDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Add form certification type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormCertificationTypeDto"
                }
              }
            }
          }
        },
        "tags": [
          "form certification types"
        ]
      }
    },
    "/formCertificationTypes/{id}": {
      "delete": {
        "operationId": "FormCertificationTypesController_delete",
        "summary": "Remove form certification type",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Remove form certification type"
          }
        },
        "tags": [
          "form certification types"
        ]
      }
    },
    "/formUrls": {
      "post": {
        "operationId": "FormUrlsController_create",
        "summary": "Add form url",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFormUrlDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Add form url",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormUrlDto"
                }
              }
            }
          }
        },
        "tags": [
          "form urls"
        ]
      }
    },
    "/formUrls/{id}": {
      "delete": {
        "operationId": "FormUrlsController_delete",
        "summary": "Remove form url",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Remove form url"
          }
        },
        "tags": [
          "form urls"
        ]
      }
    },
    "/organizationCertificationTypes": {
      "post": {
        "operationId": "OrganizationCertificationTypesController_create",
        "summary": "Add organization certification type",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrganizationCertificationTypeDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Add organization certification type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationCertificationTypeDto"
                }
              }
            }
          }
        },
        "tags": [
          "organization certification types"
        ]
      }
    },
    "/organizationCertificationTypes/{id}": {
      "delete": {
        "operationId": "OrganizationCertificationTypesController_delete",
        "summary": "Remove organization certification type",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Remove organization certification type"
          }
        },
        "tags": [
          "organization certification types"
        ]
      }
    },
    "/organizationFieldTypes": {
      "post": {
        "operationId": "OrganizationFieldTypesController_create",
        "summary": "Add organization field type",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrganizationFieldTypeDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Add organization field type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationFieldTypeDto"
                }
              }
            }
          }
        },
        "tags": [
          "organization field types"
        ]
      }
    },
    "/organizationFieldTypes/{id}": {
      "delete": {
        "operationId": "OrganizationFieldTypesController_delete",
        "summary": "Remove organization field type",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Remove organization field type"
          }
        },
        "tags": [
          "organization field types"
        ]
      }
    },
    "/organizationListTypes": {
      "post": {
        "operationId": "OrganizationListTypesController_create",
        "summary": "Add organization list type",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrganizationListTypeDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Add organization list type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationListTypeDto"
                }
              }
            }
          }
        },
        "tags": [
          "organization list types"
        ]
      }
    },
    "/organizationListTypes/{id}": {
      "delete": {
        "operationId": "OrganizationListTypesController_delete",
        "summary": "Remove organization list type",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Remove organization list type"
          }
        },
        "tags": [
          "organization list types"
        ]
      }
    },
    "/organizationUrls": {
      "post": {
        "operationId": "OrganizationUrlsController_create",
        "summary": "Add organization url",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrganizationUrlDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Add organization url",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationUrlDto"
                }
              }
            }
          }
        },
        "tags": [
          "organization urls"
        ]
      }
    },
    "/organizationUrls/{id}": {
      "put": {
        "operationId": "OrganizationUrlsController_update",
        "summary": "Update an organization url",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOrganizationUrlDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Update an organization url"
          }
        },
        "tags": [
          "organization urls"
        ]
      },
      "delete": {
        "operationId": "OrganizationUrlsController_delete",
        "summary": "Remove organization url",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Remove organization url"
          }
        },
        "tags": [
          "organization urls"
        ]
      }
    }
  },
  "info": {
    "title": "Form System API",
    "description": "This is an API for formbuilder and form-rendering (application) system",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [
    {
      "url": "http://localhost:3434"
    }
  ],
  "components": {
    "schemas": {
      "Liveness": {
        "type": "object",
        "properties": {
          "ok": {
            "type": "boolean"
          }
        },
        "required": [
          "ok"
        ]
      },
      "Version": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string"
          }
        },
        "required": [
          "version"
        ]
      },
      "LanguageType": {
        "type": "object",
        "properties": {
          "is": {
            "type": "string",
            "default": ""
          },
          "en": {
            "type": "string",
            "default": ""
          }
        },
        "required": [
          "is",
          "en"
        ]
      },
      "CreateOrganizationDto": {
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/LanguageType"
          },
          "nationalId": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "nationalId"
        ]
      },
      "Dependency": {
        "type": "object",
        "properties": {
          "parentProp": {
            "type": "string"
          },
          "childProps": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "isSelected": {
            "type": "boolean"
          }
        },
        "required": [
          "parentProp",
          "childProps",
          "isSelected"
        ]
      },
      "FormCertificationTypeDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "certificationTypeId": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "certificationTypeId"
        ]
      },
      "FormApplicantTypeDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "applicantTypeId": {
            "type": "string"
          },
          "name": {
            "$ref": "#/components/schemas/LanguageType"
          }
        },
        "required": [
          "id",
          "applicantTypeId",
          "name"
        ]
      },
      "FormUrlDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "organizationUrlId": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "isXroad": {
            "type": "boolean"
          },
          "isTest": {
            "type": "boolean"
          },
          "type": {
            "type": "string"
          },
          "method": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "organizationUrlId",
          "url",
          "isXroad",
          "isTest",
          "type",
          "method"
        ]
      },
      "FieldSettings": {
        "type": "object",
        "properties": {
          "minValue": {
            "type": "number"
          },
          "maxValue": {
            "type": "number"
          },
          "minLength": {
            "type": "number"
          },
          "maxLength": {
            "type": "number"
          },
          "minDate": {
            "format": "date-time",
            "type": "string"
          },
          "maxDate": {
            "format": "date-time",
            "type": "string"
          },
          "minAmount": {
            "type": "number"
          },
          "maxAmount": {
            "type": "number"
          },
          "year": {
            "type": "number"
          },
          "hasLink": {
            "type": "boolean"
          },
          "url": {
            "type": "string"
          },
          "buttonText": {
            "$ref": "#/components/schemas/LanguageType"
          },
          "isLarge": {
            "type": "boolean"
          },
          "hasPropertyInput": {
            "type": "boolean"
          },
          "hasPropertyList": {
            "type": "boolean"
          },
          "listType": {
            "type": "string",
            "enum": [
              "9e1600f7-7d25-4997-9e8d-16e6d15cd901",
              "2cd6cda1-ab72-4746-bb38-16b95b89ae75",
              "1df24f32-1481-4775-81eb-0cf0a5eb9328",
              "7aa0396f-2574-40cb-8ea4-299a5b62b22d",
              "7bfc3703-af37-455b-b9a1-8b612f46184b",
              "f50779b3-464c-42e3-9cc3-8914886f9bf7"
            ]
          },
          "fileTypes": {
            "type": "string"
          },
          "fileMaxSize": {
            "type": "number"
          },
          "maxFiles": {
            "type": "number"
          },
          "timeInterval": {
            "type": "string"
          }
        }
      },
      "ListItemDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "label": {
            "$ref": "#/components/schemas/LanguageType"
          },
          "description": {
            "$ref": "#/components/schemas/LanguageType"
          },
          "value": {
            "type": "string"
          },
          "displayOrder": {
            "type": "number"
          },
          "isSelected": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "label",
          "value",
          "displayOrder",
          "isSelected"
        ]
      },
      "Month": {
        "type": "object",
        "properties": {
          "month": {
            "type": "number"
          },
          "amount": {
            "type": "number"
          },
          "days": {
            "type": "array",
            "items": {
              "type": "number"
            }
          }
        }
      },
      "ValueType": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string"
          },
          "number": {
            "type": "number"
          },
          "date": {
            "format": "date-time",
            "type": "string"
          },
          "listValue": {
            "type": "string"
          },
          "nationalId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "municipality": {
            "type": "string"
          },
          "jobTitle": {
            "type": "string"
          },
          "altName": {
            "type": "string"
          },
          "homestayNumber": {
            "type": "string"
          },
          "propertyNumber": {
            "type": "string"
          },
          "totalDays": {
            "type": "number"
          },
          "totalAmount": {
            "type": "number"
          },
          "year": {
            "type": "number"
          },
          "isNullReport": {
            "type": "boolean"
          },
          "months": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Month"
            }
          },
          "email": {
            "type": "string"
          },
          "iskNumber": {
            "type": "string"
          },
          "checkboxValue": {
            "type": "boolean"
          },
          "phoneNumber": {
            "type": "string"
          },
          "bankAccount": {
            "type": "string"
          },
          "time": {
            "type": "string"
          },
          "s3Key": {
            "type": "string"
          }
        }
      },
      "ApplicationEventDto": {
        "type": "object",
        "properties": {
          "created": {
            "format": "date-time",
            "type": "string"
          },
          "eventType": {
            "type": "string"
          },
          "isFileEvent": {
            "type": "boolean"
          }
        }
      },
      "ValueDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "order": {
            "type": "number"
          },
          "json": {
            "$ref": "#/components/schemas/ValueType"
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationEventDto"
            }
          }
        },
        "required": [
          "id",
          "order",
          "events"
        ]
      },
      "FieldDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "screenId": {
            "type": "string"
          },
          "name": {
            "$ref": "#/components/schemas/LanguageType"
          },
          "displayOrder": {
            "type": "number"
          },
          "description": {
            "$ref": "#/components/schemas/LanguageType"
          },
          "isPartOfMultiset": {
            "type": "boolean"
          },
          "isRequired": {
            "type": "boolean"
          },
          "isHidden": {
            "type": "boolean"
          },
          "fieldSettings": {
            "$ref": "#/components/schemas/FieldSettings"
          },
          "fieldType": {
            "type": "string"
          },
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ListItemDto"
            }
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValueDto"
            }
          }
        },
        "required": [
          "id",
          "screenId",
          "name",
          "displayOrder",
          "description",
          "isPartOfMultiset",
          "isRequired",
          "isHidden",
          "fieldType"
        ]
      },
      "ScreenDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "sectionId": {
            "type": "string"
          },
          "name": {
            "$ref": "#/components/schemas/LanguageType"
          },
          "displayOrder": {
            "type": "number"
          },
          "isHidden": {
            "type": "boolean"
          },
          "isCompleted": {
            "type": "boolean"
          },
          "multiset": {
            "type": "number"
          },
          "callRuleset": {
            "type": "boolean"
          },
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FieldDto"
            }
          }
        },
        "required": [
          "id",
          "sectionId",
          "name",
          "displayOrder",
          "isHidden",
          "isCompleted",
          "multiset",
          "callRuleset"
        ]
      },
      "SectionDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "$ref": "#/components/schemas/LanguageType"
          },
          "sectionType": {
            "type": "string"
          },
          "displayOrder": {
            "type": "number"
          },
          "waitingText": {
            "$ref": "#/components/schemas/LanguageType"
          },
          "isHidden": {
            "type": "boolean"
          },
          "isCompleted": {
            "type": "boolean"
          },
          "screens": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScreenDto"
            }
          }
        },
        "required": [
          "id",
          "name",
          "sectionType",
          "displayOrder",
          "isHidden",
          "isCompleted"
        ]
      },
      "FormDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "organizationId": {
            "type": "string"
          },
          "name": {
            "$ref": "#/components/schemas/LanguageType"
          },
          "slug": {
            "type": "string"
          },
          "invalidationDate": {
            "format": "date-time",
            "type": "string"
          },
          "created": {
            "format": "date-time",
            "type": "string"
          },
          "modified": {
            "format": "date-time",
            "type": "string"
          },
          "isTranslated": {
            "type": "boolean"
          },
          "applicationDaysToRemove": {
            "type": "number"
          },
          "derivedFrom": {
            "type": "number"
          },
          "status": {
            "type": "string",
            "enum": [
              "a9d495ea-433a-46d4-84ba-8604cc8c7d40",
              "3ea7923b-e2a8-499d-b2db-42336bfe7c0b",
              "06459c6f-9f1e-4ddd-bbd8-e553d9a4363e",
              "c095bb71-b4ab-4a7c-9be4-4621b62591ce",
              "11c9db90-2065-45d5-b649-c98001c10dcb"
            ]
          },
          "stopProgressOnValidatingScreen": {
            "type": "boolean"
          },
          "completedMessage": {
            "$ref": "#/components/schemas/LanguageType"
          },
          "dependencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Dependency"
            }
          },
          "certificationTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FormCertificationTypeDto"
            }
          },
          "applicantTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FormApplicantTypeDto"
            }
          },
          "urls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FormUrlDto"
            }
          },
          "sections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SectionDto"
            }
          },
          "screens": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScreenDto"
            }
          },
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FieldDto"
            }
          }
        },
        "required": [
          "id",
          "organizationId",
          "name",
          "slug",
          "created",
          "modified",
          "isTranslated",
          "applicationDaysToRemove",
          "derivedFrom",
          "status",
          "stopProgressOnValidatingScreen"
        ]
      },
      "OrganizationDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "$ref": "#/components/schemas/LanguageType"
          },
          "nationalId": {
            "type": "string"
          },
          "forms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FormDto"
            }
          }
        },
        "required": [
          "id",
          "name",
          "nationalId"
        ]
      },
      "OrganizationsResponseDto": {
        "type": "object",
        "properties": {
          "organizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationDto"
            }
          }
        },
        "required": [
          "organizations"
        ]
      },
      "CreateFormDto": {
        "type": "object",
        "properties": {
          "organizationId": {
            "type": "string"
          }
        },
        "required": [
          "organizationId"
        ]
      },
      "FieldType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "$ref": "#/components/schemas/LanguageType"
          },
          "description": {
            "$ref": "#/components/schemas/LanguageType"
          },
          "isCommon": {
            "type": "boolean"
          },
          "fieldSettings": {
            "$ref": "#/components/schemas/FieldSettings"
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValueDto"
            }
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "isCommon"
        ]
      },
      "CertificationType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "$ref": "#/components/schemas/LanguageType"
          },
          "description": {
            "$ref": "#/components/schemas/LanguageType"
          },
          "isCommon": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "isCommon"
        ]
      },
      "ApplicantType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "$ref": "#/components/schemas/LanguageType"
          },
          "name": {
            "$ref": "#/components/schemas/LanguageType"
          },
          "nameSuggestions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LanguageType"
            }
          }
        },
        "required": [
          "id",
          "description"
        ]
      },
      "ListType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "$ref": "#/components/schemas/LanguageType"
          },
          "description": {
            "$ref": "#/components/schemas/LanguageType"
          },
          "isCommon": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "isCommon"
        ]
      },
      "OrganizationUrlDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "isXroad": {
            "type": "boolean"
          },
          "isTest": {
            "type": "boolean"
          },
          "type": {
            "type": "string"
          },
          "method": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "url",
          "isXroad",
          "isTest",
          "type",
          "method"
        ]
      },
      "FormResponseDto": {
        "type": "object",
        "properties": {
          "form": {
            "$ref": "#/components/schemas/FormDto"
          },
          "fieldTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FieldType"
            }
          },
          "certificationTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CertificationType"
            }
          },
          "applicantTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicantType"
            }
          },
          "listTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ListType"
            }
          },
          "urls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationUrlDto"
            }
          },
          "forms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FormDto"
            }
          }
        }
      },
      "UpdateFormDto": {
        "type": "object",
        "properties": {
          "organizationId": {
            "type": "string"
          },
          "name": {
            "$ref": "#/components/schemas/LanguageType"
          },
          "slug": {
            "type": "string"
          },
          "invalidationDate": {
            "format": "date-time",
            "type": "string"
          },
          "isTranslated": {
            "type": "boolean"
          },
          "applicationDaysToRemove": {
            "type": "number"
          },
          "stopProgressOnValidatingScreen": {
            "type": "boolean"
          },
          "completedMessage": {
            "$ref": "#/components/schemas/LanguageType"
          },
          "dependencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Dependency"
            }
          }
        }
      },
      "CreateSectionDto": {
        "type": "object",
        "properties": {
          "formId": {
            "type": "string"
          },
          "displayOrder": {
            "type": "number"
          }
        },
        "required": [
          "formId",
          "displayOrder"
        ]
      },
      "UpdateSectionDto": {
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/LanguageType"
          },
          "waitingText": {
            "$ref": "#/components/schemas/LanguageType"
          }
        }
      },
      "SectionDisplayOrderDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "UpdateSectionsDisplayOrderDto": {
        "type": "object",
        "properties": {
          "sectionsDisplayOrderDto": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SectionDisplayOrderDto"
            }
          }
        },
        "required": [
          "sectionsDisplayOrderDto"
        ]
      },
      "CreateScreenDto": {
        "type": "object",
        "properties": {
          "sectionId": {
            "type": "string"
          },
          "displayOrder": {
            "type": "number"
          }
        },
        "required": [
          "sectionId",
          "displayOrder"
        ]
      },
      "UpdateScreenDto": {
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/LanguageType"
          },
          "multiset": {
            "type": "number"
          },
          "callRuleset": {
            "type": "boolean"
          }
        }
      },
      "ScreenDisplayOrderDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "sectionId": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "sectionId"
        ]
      },
      "UpdateScreensDisplayOrderDto": {
        "type": "object",
        "properties": {
          "screensDisplayOrderDto": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScreenDisplayOrderDto"
            }
          }
        },
        "required": [
          "screensDisplayOrderDto"
        ]
      },
      "CreateFieldDto": {
        "type": "object",
        "properties": {
          "screenId": {
            "type": "string"
          },
          "fieldType": {
            "type": "string"
          },
          "displayOrder": {
            "type": "number"
          }
        },
        "required": [
          "screenId",
          "fieldType",
          "displayOrder"
        ]
      },
      "UpdateFieldDto": {
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/LanguageType"
          },
          "description": {
            "$ref": "#/components/schemas/LanguageType"
          },
          "isPartOfMultiset": {
            "type": "boolean"
          },
          "isRequired": {
            "type": "boolean"
          },
          "fieldSettings": {
            "$ref": "#/components/schemas/FieldSettings"
          },
          "fieldType": {
            "type": "string",
            "enum": [
              "b6a7e297-22fd-4426-a4e1-04a11a2e8914",
              "eee2840d-a26f-4e9b-a21b-e4478c09e546",
              "16603815-3db5-4aec-9bc7-56c1207bb79f",
              "cdd63941-ff33-49d1-8b23-0293e413a281",
              "f1d14fe1-9e70-4ab2-8f95-8a06a9cf9f48",
              "0420775e-ab81-47fc-85af-6c40be3844ac",
              "720fb3a3-6a85-456e-8173-b5913e219dc5",
              "1f56b93b-8290-4409-8fe0-1b297338e672",
              "dc50f154-0dfa-4597-80b8-6f3d9ebc36b1",
              "d6c292c7-4e7c-44a6-bb7e-b956122598b0",
              "ff7f8580-0419-4f07-9551-fc407d6fb796",
              "f806a35b-12c9-4d24-8845-024f77e077f7",
              "0e104698-4e58-4874-97a2-a8fd8d3ab7c4",
              "1955db2d-c1e3-42ed-b6c5-a668c6136e38",
              "cd73ebb6-6573-490a-9bd1-1e693a9229eb",
              "6df647aa-27c8-48b1-8ac9-05e8b4251892",
              "15a57466-0be3-451d-988d-5b807fea3459",
              "7cbbe78f-cd5f-4fb9-a77c-86af2bf986b1",
              "ac3fa8a0-9258-49d1-aff2-1dacf31538f0",
              "94819d53-69b6-464b-abda-3bb6299d2511",
              "83f6f77d-1ca7-4f99-8806-05cec59a48e4",
              "6a616adc-80ab-47c1-8037-1d9a8dc68a5c",
              "d4143c45-6d45-4052-93c6-42d46572a874"
            ]
          }
        }
      },
      "FieldDisplayOrderDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "screenId": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "screenId"
        ]
      },
      "UpdateFieldsDisplayOrderDto": {
        "type": "object",
        "properties": {
          "fieldsDisplayOrderDto": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FieldDisplayOrderDto"
            }
          }
        },
        "required": [
          "fieldsDisplayOrderDto"
        ]
      },
      "CreateListItemDto": {
        "type": "object",
        "properties": {
          "fieldId": {
            "type": "string"
          },
          "displayOrder": {
            "type": "number"
          }
        },
        "required": [
          "fieldId",
          "displayOrder"
        ]
      },
      "UpdateListItemDto": {
        "type": "object",
        "properties": {
          "label": {
            "$ref": "#/components/schemas/LanguageType"
          },
          "description": {
            "$ref": "#/components/schemas/LanguageType"
          },
          "value": {
            "type": "string"
          },
          "isSelected": {
            "type": "boolean"
          }
        }
      },
      "ListItemDisplayOrderDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "UpdateListItemsDisplayOrderDto": {
        "type": "object",
        "properties": {
          "listItemsDisplayOrderDto": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ListItemDisplayOrderDto"
            }
          }
        },
        "required": [
          "listItemsDisplayOrderDto"
        ]
      },
      "ApplicationEvent": {
        "type": "object",
        "properties": {}
      },
      "ApplicationDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "organizationName": {
            "$ref": "#/components/schemas/LanguageType"
          },
          "formId": {
            "type": "string"
          },
          "formName": {
            "$ref": "#/components/schemas/LanguageType"
          },
          "isTest": {
            "type": "boolean"
          },
          "slug": {
            "type": "string"
          },
          "created": {
            "format": "date-time",
            "type": "string"
          },
          "modified": {
            "format": "date-time",
            "type": "string"
          },
          "submittedAt": {
            "format": "date-time",
            "type": "string"
          },
          "dependencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Dependency"
            }
          },
          "completed": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "ee2545cc-b27f-4d75-bc82-b57f9d10c1b3",
              "22b3ab87-4d42-4987-b6fe-33abcf05f112",
              "2497f6f3-4b7e-4a6b-bc1e-9084ea2ad72f"
            ]
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationEvent"
            }
          },
          "sections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SectionDto"
            }
          }
        }
      },
      "CreateApplicationDto": {
        "type": "object",
        "properties": {
          "isTest": {
            "type": "boolean"
          }
        },
        "required": [
          "isTest"
        ]
      },
      "UpdateApplicationDto": {
        "type": "object",
        "properties": {
          "dependencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Dependency"
            }
          },
          "completed": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ApplicationListDto": {
        "type": "object",
        "properties": {
          "applications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationDto"
            }
          },
          "total": {
            "type": "number"
          }
        }
      },
      "CreateValueDto": {
        "type": "object",
        "properties": {
          "order": {
            "type": "number"
          },
          "fieldId": {
            "type": "string"
          },
          "fieldType": {
            "type": "string"
          },
          "applicationId": {
            "type": "string"
          }
        },
        "required": [
          "order",
          "fieldId",
          "fieldType",
          "applicationId"
        ]
      },
      "UpdateValueDto": {
        "type": "object",
        "properties": {
          "json": {
            "$ref": "#/components/schemas/ValueType"
          }
        },
        "required": [
          "json"
        ]
      },
      "CreateFormApplicantTypeDto": {
        "type": "object",
        "properties": {
          "formId": {
            "type": "string"
          },
          "applicantTypeId": {
            "type": "string"
          }
        },
        "required": [
          "formId",
          "applicantTypeId"
        ]
      },
      "UpdateFormApplicantTypeDto": {
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/LanguageType"
          }
        },
        "required": [
          "name"
        ]
      },
      "CreateFormCertificationTypeDto": {
        "type": "object",
        "properties": {
          "formId": {
            "type": "string"
          },
          "certificationTypeId": {
            "type": "string"
          }
        },
        "required": [
          "formId",
          "certificationTypeId"
        ]
      },
      "CreateFormUrlDto": {
        "type": "object",
        "properties": {
          "formId": {
            "type": "string"
          },
          "organizationUrlId": {
            "type": "string"
          }
        },
        "required": [
          "formId",
          "organizationUrlId"
        ]
      },
      "CreateOrganizationCertificationTypeDto": {
        "type": "object",
        "properties": {
          "organizationId": {
            "type": "string"
          },
          "certificationTypeId": {
            "type": "string"
          }
        },
        "required": [
          "organizationId",
          "certificationTypeId"
        ]
      },
      "OrganizationCertificationTypeDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "certificationTypeId": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "certificationTypeId"
        ]
      },
      "CreateOrganizationFieldTypeDto": {
        "type": "object",
        "properties": {
          "organizationId": {
            "type": "string"
          },
          "fieldTypeId": {
            "type": "string"
          }
        },
        "required": [
          "organizationId",
          "fieldTypeId"
        ]
      },
      "OrganizationFieldTypeDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "fieldTypeId": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "fieldTypeId"
        ]
      },
      "CreateOrganizationListTypeDto": {
        "type": "object",
        "properties": {
          "organizationId": {
            "type": "string"
          },
          "listTypeId": {
            "type": "string"
          }
        },
        "required": [
          "organizationId",
          "listTypeId"
        ]
      },
      "OrganizationListTypeDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "listTypeId": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "listTypeId"
        ]
      },
      "CreateOrganizationUrlDto": {
        "type": "object",
        "properties": {
          "organizationId": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "required": [
          "organizationId",
          "type"
        ]
      },
      "UpdateOrganizationUrlDto": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          },
          "isXroad": {
            "type": "boolean"
          },
          "method": {
            "type": "string"
          }
        }
      }
    }
  }
}