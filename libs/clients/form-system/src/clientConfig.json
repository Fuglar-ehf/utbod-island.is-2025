{
  "openapi": "3.0.0",
  "paths": {
    "/liveness": {
      "get": {
        "operationId": "InfraController_liveness",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Liveness"
                }
              }
            }
          }
        },
        "tags": [
          "internal"
        ]
      }
    },
    "/version": {
      "get": {
        "operationId": "InfraController_version",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Version"
                }
              }
            }
          }
        },
        "tags": [
          "internal"
        ]
      }
    },
    "/health/check": {
      "get": {
        "operationId": "HealthController_check",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The Health Check is successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ok"
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "nullable": true
                    },
                    "error": {
                      "type": "object",
                      "example": {},
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "nullable": true
                    },
                    "details": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "The Health Check is not successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "nullable": true
                    },
                    "error": {
                      "type": "object",
                      "example": {
                        "redis": {
                          "status": "down",
                          "message": "Could not connect"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "nullable": true
                    },
                    "details": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        },
                        "redis": {
                          "status": "down",
                          "message": "Could not connect"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organizations": {
      "post": {
        "operationId": "OrganizationsController_create",
        "summary": "Create an organization",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrganizationDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Create an organization",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationDto"
                }
              }
            }
          }
        },
        "tags": [
          "organizations"
        ]
      },
      "get": {
        "operationId": "OrganizationsController_findAll",
        "summary": "Get all Organizations",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Get all Organizations",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationsResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "organizations"
        ]
      }
    },
    "/organizations/{id}": {
      "get": {
        "operationId": "OrganizationsController_findOne",
        "summary": "Get an organization by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Get an organization by id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationDto"
                }
              }
            }
          }
        },
        "tags": [
          "organizations"
        ]
      }
    },
    "/forms": {
      "post": {
        "operationId": "FormsController_create",
        "summary": "Create new form",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFormDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Create new form",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "forms"
        ]
      }
    },
    "/forms/organization/{organizationId}": {
      "get": {
        "operationId": "FormsController_findAll",
        "summary": "Get all forms belonging to organization",
        "parameters": [
          {
            "name": "organizationId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Get all forms belonging to organization",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "forms"
        ]
      }
    },
    "/forms/{id}": {
      "get": {
        "operationId": "FormsController_findOne",
        "summary": "Get FormResponse by formId",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Get FormResponse by formId",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "forms"
        ]
      },
      "put": {
        "operationId": "FormsController_updateForm",
        "summary": "Update form",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFormDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Update form"
          }
        },
        "tags": [
          "forms"
        ]
      },
      "delete": {
        "operationId": "FormsController_delete",
        "summary": "Delete form",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Delete field"
          }
        },
        "tags": [
          "forms"
        ]
      }
    },
    "/sections": {
      "post": {
        "operationId": "SectionsController_create",
        "summary": "Creates a new section",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSectionDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Creates a new section",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SectionDto"
                }
              }
            }
          }
        },
        "tags": [
          "sections"
        ]
      },
      "put": {
        "operationId": "SectionsController_updateDisplayOrder",
        "summary": "Update display order of sections",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSectionsDisplayOrderDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Update display order of sections"
          }
        },
        "tags": [
          "sections"
        ]
      }
    },
    "/sections/{id}": {
      "put": {
        "operationId": "SectionsController_update",
        "summary": "Updates a section",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSectionDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Updates a section",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SectionDto"
                }
              }
            }
          }
        },
        "tags": [
          "sections"
        ]
      },
      "delete": {
        "operationId": "SectionsController_delete",
        "summary": "Delete section by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Delete section by id"
          }
        },
        "tags": [
          "sections"
        ]
      }
    },
    "/screens": {
      "post": {
        "operationId": "ScreensController_create",
        "summary": "Creates a new screen",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateScreenDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Creates a new screen",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScreenDto"
                }
              }
            }
          }
        },
        "tags": [
          "screens"
        ]
      },
      "put": {
        "operationId": "ScreensController_updateDisplayOrder",
        "summary": "Update display order of screens",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateScreensDisplayOrderDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Update display order of screens"
          }
        },
        "tags": [
          "screens"
        ]
      }
    },
    "/screens/{id}": {
      "put": {
        "operationId": "ScreensController_update",
        "summary": "Updates screen",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateScreenDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Updates a screen",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScreenDto"
                }
              }
            }
          }
        },
        "tags": [
          "screens"
        ]
      },
      "delete": {
        "operationId": "ScreensController_delete",
        "summary": "Delete screen by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Delete screen by id"
          }
        },
        "tags": [
          "screens"
        ]
      }
    },
    "/fields": {
      "post": {
        "operationId": "FieldsController_create",
        "summary": "Create a field",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFieldDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Create a field",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FieldDto"
                }
              }
            }
          }
        },
        "tags": [
          "fields"
        ]
      },
      "put": {
        "operationId": "FieldsController_updateDisplayOrder",
        "summary": "Update display order of fields",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFieldsDisplayOrderDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Update display order of fields"
          }
        },
        "tags": [
          "fields"
        ]
      }
    },
    "/fields/{id}": {
      "put": {
        "operationId": "FieldsController_update",
        "summary": "Update field",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFieldDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Update field"
          }
        },
        "tags": [
          "fields"
        ]
      },
      "delete": {
        "operationId": "FieldsController_delete",
        "summary": "Delete field by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Delete field by id"
          }
        },
        "tags": [
          "fields"
        ]
      }
    },
    "/listItems": {
      "post": {
        "operationId": "ListItemsController_create",
        "summary": "Create a list item",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateListItemDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Create a list item",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListItemDto"
                }
              }
            }
          }
        },
        "tags": [
          "list items"
        ]
      },
      "put": {
        "operationId": "ListItemsController_updateDisplayOrder",
        "summary": "Update display order of list items",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateListItemsDisplayOrderDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Update display order of list items"
          }
        },
        "tags": [
          "list items"
        ]
      }
    },
    "/listItems/{id}": {
      "put": {
        "operationId": "ListItemsController_update",
        "summary": "Update list item",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateListItemDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Update list item"
          }
        },
        "tags": [
          "list items"
        ]
      },
      "delete": {
        "operationId": "ListItemsController_delete",
        "summary": "Delete list item",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Delete of list items"
          }
        },
        "tags": [
          "list items"
        ]
      }
    },
    "/applications/{id}": {
      "get": {
        "operationId": "ApplicationsController_getApplication",
        "summary": "Get an application by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Get an application by id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationDto"
                }
              }
            }
          }
        },
        "tags": [
          "applications"
        ]
      }
    },
    "/applications/{slug}": {
      "post": {
        "operationId": "ApplicationsController_create",
        "summary": "Create new application",
        "parameters": [
          {
            "name": "slug",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Create new application",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationDto"
                }
              }
            }
          }
        },
        "tags": [
          "applications"
        ]
      }
    },
    "/values/{id}": {
      "put": {
        "operationId": "ValuesController_update",
        "summary": "Update a value",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Update a value",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValueDto"
                }
              }
            }
          }
        },
        "tags": [
          "values"
        ]
      }
    },
    "/formApplicants": {
      "post": {
        "operationId": "FormApplicantsController_create",
        "summary": "Create new form applicant",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFormApplicantDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Create new form applicant",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormApplicantDto"
                }
              }
            }
          }
        },
        "tags": [
          "form applicants"
        ]
      }
    },
    "/formApplicants/{id}": {
      "put": {
        "operationId": "FormApplicantsController_update",
        "summary": "Update form applicant",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFormApplicantDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Update form applicant"
          }
        },
        "tags": [
          "form applicants"
        ]
      },
      "delete": {
        "operationId": "FormApplicantsController_delete",
        "summary": "Delete form applicant",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Delete form applicant"
          }
        },
        "tags": [
          "form applicants"
        ]
      }
    }
  },
  "info": {
    "title": "Form System API",
    "description": "This is an API for formbuilder and form-rendering (application) system",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [
    {
      "url": "http://localhost:3434"
    }
  ],
  "components": {
    "schemas": {
      "Liveness": {
        "type": "object",
        "properties": {
          "ok": {
            "type": "boolean"
          }
        },
        "required": [
          "ok"
        ]
      },
      "Version": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string"
          }
        },
        "required": [
          "version"
        ]
      },
      "LanguageType": {
        "type": "object",
        "properties": {
          "is": {
            "type": "string",
            "default": ""
          },
          "en": {
            "type": "string",
            "default": ""
          }
        },
        "required": [
          "is",
          "en"
        ]
      },
      "CreateOrganizationDto": {
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/LanguageType"
          },
          "nationalId": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "nationalId"
        ]
      },
      "Dependency": {
        "type": "object",
        "properties": {
          "parentProp": {
            "type": "string"
          },
          "childProps": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "parentProp",
          "childProps"
        ]
      },
      "CertificationTypeDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "$ref": "#/components/schemas/LanguageType"
          },
          "description": {
            "$ref": "#/components/schemas/LanguageType"
          },
          "type": {
            "type": "string",
            "enum": [
              "estateGuardianshipCertificateStamped",
              "estateGuardianshipCertificateUnstamped",
              "residenceCertificate",
              "indebtednessCertificate",
              "criminalRecordStamped",
              "criminalRecordUnstamped"
            ]
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "type"
        ]
      },
      "FormApplicantDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "applicantType": {
            "type": "string",
            "enum": [
              "individual",
              "individualWithDelegationFromIndividual",
              "individualWithDelegationFromLegalEntity",
              "individualWithProcuration",
              "individualGivingDelegation",
              "legalEntity"
            ]
          },
          "name": {
            "$ref": "#/components/schemas/LanguageType"
          }
        },
        "required": [
          "id",
          "applicantType",
          "name"
        ]
      },
      "ListItemDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "label": {
            "$ref": "#/components/schemas/LanguageType"
          },
          "description": {
            "$ref": "#/components/schemas/LanguageType"
          },
          "value": {
            "type": "string"
          },
          "displayOrder": {
            "type": "number"
          },
          "isSelected": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "label",
          "value",
          "displayOrder",
          "isSelected"
        ]
      },
      "FieldSettingsDto": {
        "type": "object",
        "properties": {
          "minValue": {
            "type": "number"
          },
          "maxValue": {
            "type": "number"
          },
          "minLength": {
            "type": "number"
          },
          "maxLength": {
            "type": "number"
          },
          "minDate": {
            "format": "date-time",
            "type": "string"
          },
          "maxDate": {
            "format": "date-time",
            "type": "string"
          },
          "minAmount": {
            "type": "string"
          },
          "maxAmount": {
            "type": "string"
          },
          "year": {
            "type": "number"
          },
          "hasLink": {
            "type": "boolean"
          },
          "url": {
            "type": "string"
          },
          "buttonText": {
            "$ref": "#/components/schemas/LanguageType"
          },
          "hasPropertyInput": {
            "type": "boolean"
          },
          "hasPropertyList": {
            "type": "boolean"
          },
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ListItemDto"
            }
          },
          "listType": {
            "type": "string"
          },
          "fileTypes": {
            "type": "string"
          },
          "fileMaxSize": {
            "type": "number"
          },
          "maxFiles": {
            "type": "number"
          },
          "timeInterval": {
            "type": "string"
          }
        }
      },
      "ValueDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "json": {
            "$ref": "#/components/schemas/"
          }
        },
        "required": [
          "id",
          "json"
        ]
      },
      "FieldDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "screenId": {
            "type": "string"
          },
          "name": {
            "$ref": "#/components/schemas/LanguageType"
          },
          "displayOrder": {
            "type": "number"
          },
          "description": {
            "$ref": "#/components/schemas/LanguageType"
          },
          "isPartOfMultiset": {
            "type": "boolean"
          },
          "fieldSettings": {
            "$ref": "#/components/schemas/FieldSettingsDto"
          },
          "fieldType": {
            "type": "string",
            "enum": [
              "default",
              "email",
              "propertyNumber",
              "iskNumberbox",
              "checkbox",
              "datePicker",
              "numberbox",
              "payer",
              "nationaIdEstate",
              "phoneNumber",
              "message",
              "radioButtons",
              "document",
              "bankAccount",
              "nationalId",
              "homestayNumber",
              "iskSumbox",
              "dropdownList",
              "nationalIdAll",
              "timeInput",
              "homestayOverview",
              "payment",
              "textbox"
            ]
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValueDto"
            }
          }
        },
        "required": [
          "id",
          "screenId",
          "name",
          "displayOrder",
          "description",
          "isPartOfMultiset",
          "fieldType",
          "values"
        ]
      },
      "ScreenDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "sectionId": {
            "type": "string"
          },
          "name": {
            "$ref": "#/components/schemas/LanguageType"
          },
          "displayOrder": {
            "type": "number"
          },
          "isHidden": {
            "type": "boolean"
          },
          "multiset": {
            "type": "number"
          },
          "callRuleset": {
            "type": "boolean"
          },
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FieldDto"
            }
          }
        },
        "required": [
          "id",
          "sectionId",
          "name",
          "displayOrder",
          "isHidden",
          "multiset",
          "callRuleset"
        ]
      },
      "SectionDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "$ref": "#/components/schemas/LanguageType"
          },
          "sectionType": {
            "type": "string",
            "enum": [
              "premises",
              "parties",
              "input",
              "payment"
            ]
          },
          "displayOrder": {
            "type": "number"
          },
          "waitingText": {
            "$ref": "#/components/schemas/LanguageType"
          },
          "isHidden": {
            "type": "boolean"
          },
          "isCompleted": {
            "type": "boolean"
          },
          "screens": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScreenDto"
            }
          }
        },
        "required": [
          "id",
          "name",
          "sectionType",
          "displayOrder",
          "isHidden",
          "isCompleted"
        ]
      },
      "FormDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "organizationId": {
            "type": "string"
          },
          "name": {
            "$ref": "#/components/schemas/LanguageType"
          },
          "slug": {
            "type": "string"
          },
          "invalidationDate": {
            "format": "date-time",
            "type": "string"
          },
          "created": {
            "format": "date-time",
            "type": "string"
          },
          "modified": {
            "format": "date-time",
            "type": "string"
          },
          "isTranslated": {
            "type": "boolean"
          },
          "applicationDaysToRemove": {
            "type": "number"
          },
          "derivedFrom": {
            "type": "number"
          },
          "stopProgressOnValidatingScreen": {
            "type": "boolean"
          },
          "completedMessage": {
            "$ref": "#/components/schemas/LanguageType"
          },
          "dependencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Dependency"
            }
          },
          "certificationTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CertificationTypeDto"
            }
          },
          "applicants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FormApplicantDto"
            }
          },
          "sections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SectionDto"
            }
          },
          "screens": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScreenDto"
            }
          },
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FieldDto"
            }
          }
        },
        "required": [
          "id",
          "organizationId",
          "name",
          "slug",
          "created",
          "modified",
          "isTranslated",
          "applicationDaysToRemove",
          "derivedFrom",
          "stopProgressOnValidatingScreen"
        ]
      },
      "OrganizationDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "$ref": "#/components/schemas/LanguageType"
          },
          "nationalId": {
            "type": "string"
          },
          "forms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FormDto"
            }
          }
        },
        "required": [
          "id",
          "name",
          "nationalId"
        ]
      },
      "OrganizationsResponseDto": {
        "type": "object",
        "properties": {
          "organizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationDto"
            }
          }
        },
        "required": [
          "organizations"
        ]
      },
      "CreateFormDto": {
        "type": "object",
        "properties": {
          "organizationId": {
            "type": "string"
          }
        },
        "required": [
          "organizationId"
        ]
      },
      "FieldTypeDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "default",
              "email",
              "propertyNumber",
              "iskNumberbox",
              "checkbox",
              "datePicker",
              "numberbox",
              "payer",
              "nationaIdEstate",
              "phoneNumber",
              "message",
              "radioButtons",
              "document",
              "bankAccount",
              "nationalId",
              "homestayNumber",
              "iskSumbox",
              "dropdownList",
              "nationalIdAll",
              "timeInput",
              "homestayOverview",
              "payment",
              "textbox"
            ]
          },
          "name": {
            "$ref": "#/components/schemas/LanguageType"
          },
          "description": {
            "$ref": "#/components/schemas/LanguageType"
          },
          "isCommon": {
            "type": "boolean"
          },
          "fieldSettings": {
            "$ref": "#/components/schemas/FieldSettingsDto"
          }
        },
        "required": [
          "id",
          "type",
          "name",
          "description",
          "isCommon"
        ]
      },
      "ListTypeDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "$ref": "#/components/schemas/LanguageType"
          },
          "description": {
            "$ref": "#/components/schemas/LanguageType"
          },
          "type": {
            "type": "string"
          },
          "isCommon": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "type",
          "isCommon"
        ]
      },
      "FormResponseDto": {
        "type": "object",
        "properties": {
          "form": {
            "$ref": "#/components/schemas/FormDto"
          },
          "fieldTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FieldTypeDto"
            }
          },
          "certificationTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CertificationTypeDto"
            }
          },
          "listTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ListTypeDto"
            }
          },
          "forms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FormDto"
            }
          }
        }
      },
      "UpdateFormDto": {
        "type": "object",
        "properties": {
          "organizationId": {
            "type": "string"
          },
          "name": {
            "$ref": "#/components/schemas/LanguageType"
          },
          "slug": {
            "type": "string"
          },
          "invalidationDate": {
            "format": "date-time",
            "type": "string"
          },
          "isTranslated": {
            "type": "boolean"
          },
          "applicationDaysToRemove": {
            "type": "number"
          },
          "stopProgressOnValidatingScreen": {
            "type": "boolean"
          },
          "completedMessage": {
            "$ref": "#/components/schemas/LanguageType"
          },
          "dependencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Dependency"
            }
          }
        }
      },
      "CreateSectionDto": {
        "type": "object",
        "properties": {
          "formId": {
            "type": "string"
          }
        },
        "required": [
          "formId"
        ]
      },
      "UpdateSectionDto": {
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/LanguageType"
          },
          "waitingText": {
            "$ref": "#/components/schemas/LanguageType"
          }
        },
        "required": [
          "name"
        ]
      },
      "SectionDisplayOrderDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "UpdateSectionsDisplayOrderDto": {
        "type": "object",
        "properties": {
          "sectionsDisplayOrderDto": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SectionDisplayOrderDto"
            }
          }
        },
        "required": [
          "sectionsDisplayOrderDto"
        ]
      },
      "CreateScreenDto": {
        "type": "object",
        "properties": {
          "sectionId": {
            "type": "string"
          }
        },
        "required": [
          "sectionId"
        ]
      },
      "UpdateScreenDto": {
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/LanguageType"
          },
          "multiset": {
            "type": "number"
          },
          "callRuleset": {
            "type": "boolean"
          }
        },
        "required": [
          "name",
          "multiset",
          "callRuleset"
        ]
      },
      "ScreenDisplayOrderDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "sectionId": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "sectionId"
        ]
      },
      "UpdateScreensDisplayOrderDto": {
        "type": "object",
        "properties": {
          "screensDisplayOrderDto": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScreenDisplayOrderDto"
            }
          }
        },
        "required": [
          "screensDisplayOrderDto"
        ]
      },
      "CreateFieldDto": {
        "type": "object",
        "properties": {
          "screenId": {
            "type": "string"
          }
        },
        "required": [
          "screenId"
        ]
      },
      "UpdateFieldSettingsDto": {
        "type": "object",
        "properties": {
          "minValue": {
            "type": "number"
          },
          "maxValue": {
            "type": "number"
          },
          "minLength": {
            "type": "number"
          },
          "maxLength": {
            "type": "number"
          },
          "minDate": {
            "format": "date-time",
            "type": "string"
          },
          "maxDate": {
            "format": "date-time",
            "type": "string"
          },
          "minAmount": {
            "type": "string"
          },
          "maxAmount": {
            "type": "string"
          },
          "year": {
            "type": "number"
          },
          "hasLink": {
            "type": "boolean"
          },
          "url": {
            "type": "string"
          },
          "buttonText": {
            "$ref": "#/components/schemas/LanguageType"
          },
          "hasPropertyInput": {
            "type": "boolean"
          },
          "hasPropertyList": {
            "type": "boolean"
          },
          "listType": {
            "type": "string"
          },
          "fileTypes": {
            "type": "string"
          },
          "fileMaxSize": {
            "type": "number"
          },
          "maxFiles": {
            "type": "number"
          },
          "timeInterval": {
            "type": "string"
          }
        }
      },
      "UpdateFieldDto": {
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/LanguageType"
          },
          "description": {
            "$ref": "#/components/schemas/LanguageType"
          },
          "isPartOfMultiset": {
            "type": "boolean"
          },
          "fieldSettings": {
            "$ref": "#/components/schemas/UpdateFieldSettingsDto"
          },
          "fieldType": {
            "type": "string",
            "enum": [
              "default",
              "email",
              "propertyNumber",
              "iskNumberbox",
              "checkbox",
              "datePicker",
              "numberbox",
              "payer",
              "nationaIdEstate",
              "phoneNumber",
              "message",
              "radioButtons",
              "document",
              "bankAccount",
              "nationalId",
              "homestayNumber",
              "iskSumbox",
              "dropdownList",
              "nationalIdAll",
              "timeInput",
              "homestayOverview",
              "payment",
              "textbox"
            ]
          }
        },
        "required": [
          "name",
          "description",
          "isPartOfMultiset",
          "fieldSettings",
          "fieldType"
        ]
      },
      "FieldDisplayOrderDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "screenId": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "screenId"
        ]
      },
      "UpdateFieldsDisplayOrderDto": {
        "type": "object",
        "properties": {
          "fieldsDisplayOrderDto": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FieldDisplayOrderDto"
            }
          }
        },
        "required": [
          "fieldsDisplayOrderDto"
        ]
      },
      "CreateListItemDto": {
        "type": "object",
        "properties": {
          "fieldId": {
            "type": "string"
          },
          "displayOrder": {
            "type": "number"
          }
        },
        "required": [
          "fieldId",
          "displayOrder"
        ]
      },
      "UpdateListItemDto": {
        "type": "object",
        "properties": {
          "label": {
            "$ref": "#/components/schemas/LanguageType"
          },
          "description": {
            "$ref": "#/components/schemas/LanguageType"
          },
          "value": {
            "type": "string"
          },
          "isSelected": {
            "type": "boolean"
          }
        },
        "required": [
          "label",
          "value",
          "isSelected"
        ]
      },
      "ListItemDisplayOrderDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "UpdateListItemsDisplayOrderDto": {
        "type": "object",
        "properties": {
          "listItemsDisplayOrderDto": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ListItemDisplayOrderDto"
            }
          }
        },
        "required": [
          "listItemsDisplayOrderDto"
        ]
      },
      "ApplicationDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "organization": {
            "$ref": "#/components/schemas/OrganizationDto"
          },
          "formId": {
            "type": "string"
          },
          "formName": {
            "$ref": "#/components/schemas/LanguageType"
          },
          "slug": {
            "type": "string"
          },
          "created": {
            "format": "date-time",
            "type": "string"
          },
          "modified": {
            "format": "date-time",
            "type": "string"
          },
          "sections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SectionDto"
            }
          }
        }
      },
      "Object": {
        "type": "object",
        "properties": {}
      },
      "CreateFormApplicantDto": {
        "type": "object",
        "properties": {
          "formId": {
            "type": "string"
          },
          "applicantType": {
            "type": "string",
            "enum": [
              "individual",
              "individualWithDelegationFromIndividual",
              "individualWithDelegationFromLegalEntity",
              "individualWithProcuration",
              "individualGivingDelegation",
              "legalEntity"
            ]
          }
        },
        "required": [
          "formId",
          "applicantType"
        ]
      },
      "UpdateFormApplicantDto": {
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/LanguageType"
          }
        },
        "required": [
          "name"
        ]
      }
    }
  }
}