{
  "openapi": "3.0.0",
  "paths": {
    "/keyOptions": {
      "get": {
        "operationId": "getAllKeyOptions",
        "summary": "Get all key options.",
        "description": "Get all key options, can be filtered by type. If type input is not valid, all key options will be returned.",
        "parameters": [
          {
            "name": "type",
            "required": false,
            "in": "query",
            "description": "Type of key option",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/KeyOption" }
                }
              }
            }
          }
        },
        "tags": ["Frigg"]
      }
    },
    "/keyOptions/types": {
      "get": {
        "operationId": "getTypes",
        "summary": "Get list of types of key options",
        "description": "Get types.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "type": "array", "items": { "type": "string" } }
              }
            }
          }
        },
        "tags": ["Frigg"]
      }
    },
    "/health": {
      "get": {
        "operationId": "health",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Utils"]
      }
    },
    "/schools": {
      "get": {
        "operationId": "getAllSchoolsByMunicipality",
        "summary": "Get all schools.",
        "description": "Returns a paginated collection of schools.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/OrganizationModel" }
                }
              }
            }
          }
        },
        "tags": ["Frigg"],
        "security": [{ "bearer": [] }]
      }
    },
    "/student/{nationalId}": {
      "get": {
        "operationId": "getUserBySourcedId",
        "summary": "Get user by nationalId",
        "description": "Get user by Id. ",
        "parameters": [
          {
            "name": "nationalId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserModel" }
              }
            }
          }
        },
        "tags": ["Frigg"],
        "security": [{ "bearer": [] }]
      }
    }
  },
  "info": {
    "title": "MMS Internal API",
    "description": "Frigg - student information system",
    "version": "1",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Please enter token in from IAS",
        "type": "http"
      }
    },
    "schemas": {
      "Value": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "description": "Text to be displayed for option",
            "example": "Fish allergy"
          },
          "language": {
            "type": "string",
            "description": "Language code of describing the language text is translated to.",
            "example": "en"
          }
        },
        "required": ["content", "language"]
      },
      "Option": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "description": "Id of option." },
          "key": {
            "type": "string",
            "description": "Key of the option.",
            "example": "fish"
          },
          "value": {
            "description": "List of translations of readable strings of the option.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/Value" }
          }
        },
        "required": ["id", "key", "value"]
      },
      "KeyOption": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of options.",
            "example": "allergy"
          },
          "options": {
            "description": "List of options.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/Option" }
          }
        },
        "required": ["type", "options"]
      },
      "AddressModel": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "street": { "type": "string" },
          "municipality": { "type": "object", "nullable": true },
          "zip": { "type": "string" },
          "country": { "type": "object", "nullable": true }
        },
        "required": ["id", "street", "municipality", "zip", "country"]
      },
      "OrganizationModel": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "nationalId": { "type": "string" },
          "name": { "type": "string" },
          "type": {
            "type": "string",
            "enum": ["municipality", "national", "school"]
          },
          "gradeLevels": { "type": "array", "items": { "type": "string" } },
          "address": {
            "nullable": true,
            "allOf": [{ "$ref": "#/components/schemas/AddressModel" }]
          },
          "parent": {
            "nullable": true,
            "default": null,
            "allOf": [{ "$ref": "#/components/schemas/OrganizationModel" }]
          },
          "children": {
            "nullable": true,
            "default": [],
            "type": "array",
            "items": { "$ref": "#/components/schemas/OrganizationModel" }
          }
        },
        "required": [
          "id",
          "nationalId",
          "name",
          "type",
          "gradeLevels",
          "address",
          "parent",
          "children"
        ]
      },
      "MembershipOrganizationModel": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "nationalId": { "type": "string" },
          "name": { "type": "string" },
          "type": {
            "type": "string",
            "enum": ["municipality", "national", "school"]
          }
        },
        "required": ["id", "nationalId", "name", "type"]
      },
      "MembershipModel": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "role": {
            "type": "string",
            "enum": [
              "admin",
              "guardian",
              "parent",
              "principal",
              "relative",
              "student",
              "teacher"
            ]
          },
          "beginDate": { "format": "date-time", "type": "string" },
          "endDate": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "organization": {
            "nullable": true,
            "allOf": [
              { "$ref": "#/components/schemas/MembershipOrganizationModel" }
            ]
          }
        },
        "required": ["id", "role", "beginDate", "endDate", "organization"]
      },
      "AgentModel": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "nationalId": { "type": "string" },
          "name": { "type": "string" },
          "phone": { "type": "string" },
          "email": { "type": "string" },
          "role": { "type": "string" },
          "address": {
            "nullable": true,
            "allOf": [{ "$ref": "#/components/schemas/AddressModel" }]
          }
        },
        "required": [
          "id",
          "nationalId",
          "name",
          "phone",
          "email",
          "role",
          "address"
        ]
      },
      "UserModel": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "nationalId": { "type": "string" },
          "name": { "type": "string" },
          "preferredName": { "type": "object", "nullable": true },
          "pronouns": { "type": "array", "items": { "type": "string" } },
          "gradeLevels": { "type": "array", "items": { "type": "string" } },
          "email": { "type": "object", "nullable": true },
          "address": {
            "nullable": true,
            "allOf": [{ "$ref": "#/components/schemas/AddressModel" }]
          },
          "primaryOrgId": { "type": "object" },
          "memberships": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/MembershipModel" }
          },
          "agents": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/AgentModel" }
          }
        },
        "required": [
          "id",
          "nationalId",
          "name",
          "preferredName",
          "pronouns",
          "gradeLevels",
          "email",
          "address",
          "primaryOrgId",
          "memberships",
          "agents"
        ]
      }
    }
  }
}
