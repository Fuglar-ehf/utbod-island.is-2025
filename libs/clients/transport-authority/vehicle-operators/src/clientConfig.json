{
  "openapi": "3.0.1",
  "info": {
    "title": "SGS Rest API",
    "description": "Operators API developed in .Net6.0",
    "contact": {
      "name": "Samg√∂ngustofa",
      "email": "tolvuhjalp@samgongustofa.is"
    },
    "version": "2.0"
  },
  "servers": [
    {
      "url": "/vehicle/operators"
    }
  ],
  "paths": {
    "/authenticate": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Authentication for Domain user",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The requested API version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2.0"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2.0"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/{permno}": {
      "get": {
        "tags": ["Operator"],
        "summary": "GET for vehicle permno",
        "parameters": [
          {
            "name": "permno",
            "in": "path",
            "description": "Vehicle permno",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The requested API version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2.0"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2.0"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OperatorDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OperatorDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OperatorDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/{permno}/{operatorSerialNumber}": {
      "get": {
        "tags": ["Operator"],
        "summary": "Get operators for a permno and specific operator serialnumber",
        "operationId": "GetByPermnoAndSerialNumber",
        "parameters": [
          {
            "name": "permno",
            "in": "path",
            "description": "Vehicle permno",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operatorserialnumber",
            "in": "path",
            "description": "Operator serial number",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The requested API version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2.0"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2.0"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OperatorDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OperatorDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OperatorDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/{permno}/{persidno}/{operatorSerialNumber}": {
      "get": {
        "tags": ["Operator"],
        "summary": "Get operator info for a specific vehicle, persidno and serial number",
        "parameters": [
          {
            "name": "permno",
            "in": "path",
            "description": "Vehicle permno",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "persidno",
            "in": "path",
            "description": "Person persidno",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operatorserialnumber",
            "in": "path",
            "description": "Operator serial number",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The requested API version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2.0"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2.0"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OperatorDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperatorDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperatorDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/all/{permno}": {
      "get": {
        "tags": ["Operator"],
        "summary": "Get operator history for specific vehicle",
        "parameters": [
          {
            "name": "permno",
            "in": "path",
            "description": "Vehicle permno",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The requested API version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2.0"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2.0"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OperatorDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OperatorDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OperatorDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/withcontract": {
      "post": {
        "tags": ["Operator"],
        "summary": "Post changes for operators, using file in base64 format",
        "description": "Success status codes:\r\n\r\n    200: operation is successful but message needs to be returned, no object returned         \r\n    201: operation is successful , object created is returned",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The requested API version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2.0"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2.0"
            }
          }
        ],
        "requestBody": {
          "description": "Model with information",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PostOperatorsWithBase64Contract"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostOperatorsWithBase64Contract"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PostOperatorsWithBase64Contract"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PostOperatorsWithBase64Contract"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReturnTypeMessage"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReturnTypeMessage"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReturnTypeMessage"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PostOperatorsWithBase64Contract"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostOperatorsWithBase64Contract"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostOperatorsWithBase64Contract"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Operator"],
        "summary": "Update operators using file in base64 format",
        "description": "Success status codes:\r\n\r\n    200: operation is successful but message needs to be returned, no object returned                 \r\n    204: operation is successful",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The requested API version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2.0"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2.0"
            }
          }
        ],
        "requestBody": {
          "description": "Model with information",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PutOperatorsWithBase64Contract"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PutOperatorsWithBase64Contract"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PutOperatorsWithBase64Contract"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PutOperatorsWithBase64Contract"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReturnTypeMessage"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReturnTypeMessage"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReturnTypeMessage"
                  }
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AuthenticateModel": {
        "required": ["password", "username"],
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "OperatorDto": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "description": "Start date for operator",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "End date for operator",
            "format": "date-time",
            "nullable": true
          },
          "persidno": {
            "type": "string",
            "description": "Persidno for operator",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name of operator",
            "nullable": true
          },
          "make": {
            "type": "string",
            "description": "Make of vehicle",
            "nullable": true
          },
          "mainOperator": {
            "type": "boolean",
            "description": "Is this the main operator",
            "nullable": true
          },
          "operatorSerialNumber": {
            "type": "integer",
            "description": "Operator serial number",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Operator entity"
      },
      "PostOperatorsEntityWithContract": {
        "required": ["mainOperator", "personIdNumber", "startDate"],
        "type": "object",
        "properties": {
          "personIdNumber": {
            "maxLength": 10,
            "minLength": 10,
            "pattern": "^[0-9]{1,10}$",
            "type": "string",
            "description": "Person id number"
          },
          "startDate": {
            "type": "string",
            "description": "Operator startdate",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "Operator enddate",
            "format": "date-time",
            "nullable": true
          },
          "mainOperator": {
            "maximum": 1,
            "minimum": 0,
            "type": "integer",
            "description": "Is this person the main operator",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Entity to post when posting multiple operators"
      },
      "PostOperatorsWithBase64Contract": {
        "required": ["contract", "operators", "permno"],
        "type": "object",
        "properties": {
          "permno": {
            "maxLength": 5,
            "minLength": 5,
            "type": "string",
            "description": "Vehicle permanent number"
          },
          "reportingPersonIdNumber": {
            "maxLength": 10,
            "minLength": 10,
            "pattern": "^[0-9]{1,10}$",
            "type": "string",
            "description": "Person id of reporter",
            "nullable": true
          },
          "operators": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PostOperatorsEntityWithContract"
            },
            "description": "List of operators"
          },
          "contract": {
            "type": "string",
            "description": "Contract of operator change (pdf file) form US142"
          }
        },
        "additionalProperties": false,
        "description": "Class to post operators with contract"
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PutOperatorsEntityWithContract": {
        "required": ["mainOperator", "personIdNumber", "startDate"],
        "type": "object",
        "properties": {
          "personIdNumber": {
            "maxLength": 10,
            "minLength": 10,
            "pattern": "^[0-9]{1,10}$",
            "type": "string",
            "description": "Person id number"
          },
          "startDate": {
            "type": "string",
            "description": "Startdate",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "Enddate",
            "format": "date-time",
            "nullable": true
          },
          "mainOperator": {
            "maximum": 1,
            "minimum": 0,
            "type": "integer",
            "description": "Is this person the main operator",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Entity for operator when updating multiple operators"
      },
      "PutOperatorsWithBase64Contract": {
        "required": ["contract", "operators", "permno"],
        "type": "object",
        "properties": {
          "permno": {
            "maxLength": 5,
            "minLength": 5,
            "type": "string",
            "description": "Vehicle permno",
            "example": "AB123"
          },
          "reportingPersonIdNumber": {
            "maxLength": 10,
            "minLength": 10,
            "pattern": "^[0-9]{1,10}$",
            "type": "string",
            "description": "Person id of reporter",
            "nullable": true
          },
          "operators": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PutOperatorsEntityWithContract"
            },
            "description": "List of operators"
          },
          "contract": {
            "type": "string",
            "description": "Contract of operator change"
          }
        },
        "additionalProperties": false,
        "description": "Model to update operators, with attached contract"
      },
      "ReturnTypeMessage": {
        "type": "object",
        "properties": {
          "lookupNo": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "warnSever": {
            "type": "string",
            "nullable": true
          },
          "errorMess": {
            "type": "string",
            "nullable": true
          },
          "permno": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "normalizedUserName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "normalizedEmail": {
            "type": "string",
            "nullable": true
          },
          "emailConfirmed": {
            "type": "boolean"
          },
          "passwordHash": {
            "type": "string",
            "nullable": true
          },
          "securityStamp": {
            "type": "string",
            "nullable": true
          },
          "concurrencyStamp": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "phoneNumberConfirmed": {
            "type": "boolean"
          },
          "twoFactorEnabled": {
            "type": "boolean"
          },
          "lockoutEnd": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lockoutEnabled": {
            "type": "boolean"
          },
          "accessFailedCount": {
            "type": "integer",
            "format": "int32"
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "jwtToken": {
            "type": "string",
            "nullable": true
          },
          "role": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme.",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ]
}
