{
  "openapi": "3.0.1",
  "info": {
    "title": "Services for statistics - Electronic Registrations",
    "description": "Web service which provides statistics about electronic registrations of ownership and encumbrances.",
    "contact": {
      "name": "Registers Iceland",
      "url": "https://www.skra.is",
      "email": "skra@skra.is"
    },
    "version": "v1.0.2",
    "x-category": ["open", "official", "financial"],
    "x-pricing": ["free"],
    "x-links": {
      "documentation": null,
      "responsibleParty": null,
      "bugReport": null,
      "featureRequest": null
    }
  },
  "servers": [
    {
      "url": "/business/tolfraedi"
    }
  ],
  "paths": {
    "/v1/statistics/broken-down-registration-statistics": {
      "get": {
        "tags": ["Statistics"],
        "summary": "Gets information regarding statistics of electronic vs. paper registrations broken down by months and document type.",
        "operationId": "FaSundurlidadaThinglysingarTolfraediAsync",
        "parameters": [
          {
            "name": "dateFrom",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "dateTo",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RegistrationOfTypeForPeriod"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RegistrationOfTypeForPeriod"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RegistrationOfTypeForPeriod"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RegistrationOfTypeForPeriod"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RegistrationOfTypeForPeriod"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IslandIsError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IslandIsError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IslandIsError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IslandIsError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IslandIsError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IslandIsError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IslandIsError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IslandIsError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IslandIsError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IslandIsError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IslandIsError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IslandIsError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/statistics/total-electronic-registration-action-requests": {
      "get": {
        "tags": ["Statistics"],
        "summary": "Gets information regarding statistics of electronic registrations.",
        "description": "The API returns the total number of electronic registrations as well as giving a breakdown on\r\nthe number of registrations that were accepted, partly registered, had errors or were sent into manual processing.",
        "operationId": "FaFjoldaRafraennaThinglysingaBeidnaAsync",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TotalRegistrationActionsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TotalRegistrationActionsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TotalRegistrationActionsResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TotalRegistrationActionsResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TotalRegistrationActionsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IslandIsError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IslandIsError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IslandIsError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IslandIsError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IslandIsError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IslandIsError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IslandIsError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IslandIsError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IslandIsError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IslandIsError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IslandIsError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IslandIsError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/test/liveness": {
      "get": {
        "tags": ["Test"],
        "summary": "Returns the string \"OK\" if the Web API is up and running or an error if it is not.",
        "operationId": "LivenessAsync",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IslandIsError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IslandIsError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IslandIsError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IslandIsError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IslandIsError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IslandIsError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IslandIsError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IslandIsError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IslandIsError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IslandIsError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IslandIsError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IslandIsError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "IslandIsError": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RegistrationOfTypeForPeriod": {
        "type": "object",
        "properties": {
          "periodIntervalName": {
            "type": "string",
            "description": "Name of the period. Month followed by year.",
            "nullable": true
          },
          "totalRegistrationForCurrentPeriodInterval": {
            "type": "integer",
            "description": "Total number of registration for current period.",
            "format": "int32"
          },
          "totalPaperRegistrationsForCurrentPeriodInterval": {
            "type": "integer",
            "description": "Total number of paper registration for current period.",
            "format": "int32"
          },
          "totalManualRegistrationsForCurrentPeriodInterval": {
            "type": "integer",
            "description": "Total number of manual registration for current period.",
            "format": "int32"
          },
          "totalElectronicRegistrationsForCurrentPeriodInterval": {
            "type": "integer",
            "description": "Total number of electronic registration for current period.",
            "format": "int32"
          },
          "registrationTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegistrationTypeStatistic"
            },
            "description": "List of registration statistics broken down by document type.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Statsitics for registrations broken down by document type and period."
      },
      "RegistrationTypeStatistic": {
        "type": "object",
        "properties": {
          "registrationType": {
            "type": "string",
            "description": "Type of document.",
            "nullable": true
          },
          "totalRegistrationsOfType": {
            "type": "integer",
            "description": "Total number of registrations for this document type.",
            "format": "int32"
          },
          "totalPaperRegistrationsOfType": {
            "type": "integer",
            "description": "Total number of paper registrations for this document type.",
            "format": "int32"
          },
          "totalManualRegistrationsOfType": {
            "type": "integer",
            "description": "Total number of manual registrations for this document type.",
            "format": "int32"
          },
          "totalElectronicRegistrationsOfType": {
            "type": "integer",
            "description": "Total number of electronic registrations for this document type.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Registration statistics broken down by document type."
      },
      "TotalRegistrationActionsResponse": {
        "type": "object",
        "properties": {
          "numberOfTotalRegistrationActionRequestCalls": {
            "type": "integer",
            "description": "Total number of registration action calls.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Information about the total number of registration actions."
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "Enter: Bearer {JWT token}. You can get the JWT token at /v1/signin.",
        "name": "Authorization",
        "in": "header"
      }
    }
  }
}
