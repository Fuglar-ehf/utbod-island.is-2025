/* tslint:disable */
/* eslint-disable */
/**
 * Application backend
 * This is provided as a reference to implement other backends.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ApplicationResponseDto
 */
export interface ApplicationResponseDto {
    /**
     * 
     * @type {string}
     * @memberof ApplicationResponseDto
     */
    id: string;
    /**
     * 
     * @type {Date}
     * @memberof ApplicationResponseDto
     */
    created: Date;
    /**
     * 
     * @type {Date}
     * @memberof ApplicationResponseDto
     */
    modified: Date;
    /**
     * 
     * @type {string}
     * @memberof ApplicationResponseDto
     */
    applicant: string;
    /**
     * 
     * @type {string}
     * @memberof ApplicationResponseDto
     */
    assignee: string;
    /**
     * 
     * @type {string}
     * @memberof ApplicationResponseDto
     */
    externalId?: string;
    /**
     * 
     * @type {string}
     * @memberof ApplicationResponseDto
     */
    state: string;
    /**
     * 
     * @type {object}
     * @memberof ApplicationResponseDto
     */
    attachments?: object;
    /**
     * 
     * @type {string}
     * @memberof ApplicationResponseDto
     */
    typeId: ApplicationResponseDtoTypeIdEnum;
    /**
     * 
     * @type {object}
     * @memberof ApplicationResponseDto
     */
    answers: object;
    /**
     * 
     * @type {object}
     * @memberof ApplicationResponseDto
     */
    externalData: object;
    /**
     * 
     * @type {string}
     * @memberof ApplicationResponseDto
     */
    name?: string;
    /**
     * 
     * @type {number}
     * @memberof ApplicationResponseDto
     */
    progress?: number;
}

export function ApplicationResponseDtoFromJSON(json: any): ApplicationResponseDto {
    return ApplicationResponseDtoFromJSONTyped(json, false);
}

export function ApplicationResponseDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApplicationResponseDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'created': (new Date(json['created'])),
        'modified': (new Date(json['modified'])),
        'applicant': json['applicant'],
        'assignee': json['assignee'],
        'externalId': !exists(json, 'externalId') ? undefined : json['externalId'],
        'state': json['state'],
        'attachments': !exists(json, 'attachments') ? undefined : json['attachments'],
        'typeId': json['typeId'],
        'answers': json['answers'],
        'externalData': json['externalData'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'progress': !exists(json, 'progress') ? undefined : json['progress'],
    };
}

export function ApplicationResponseDtoToJSON(value?: ApplicationResponseDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'created': (value.created.toISOString()),
        'modified': (value.modified.toISOString()),
        'applicant': value.applicant,
        'assignee': value.assignee,
        'externalId': value.externalId,
        'state': value.state,
        'attachments': value.attachments,
        'typeId': value.typeId,
        'answers': value.answers,
        'externalData': value.externalData,
        'name': value.name,
        'progress': value.progress,
    };
}

/**
* @export
* @enum {string}
*/
export enum ApplicationResponseDtoTypeIdEnum {
    ExampleForm = 'ExampleForm',
    DrivingLessons = 'DrivingLessons',
    ParentalLeave = 'ParentalLeave'
}


