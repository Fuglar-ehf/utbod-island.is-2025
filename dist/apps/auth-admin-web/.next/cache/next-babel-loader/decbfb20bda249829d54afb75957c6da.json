{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React, { Component } from \"react\";\n\nclass Paginator extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"page\", 1);\n\n    _defineProperty(this, \"useEffect\", () => {\n      console.log(\"component updated\");\n    });\n\n    _defineProperty(this, \"next\", async () => {\n      if (this.page === this.props.lastPage) {\n        return;\n      }\n\n      this.page++;\n      this.props.handlePageChange(this.page);\n    });\n\n    _defineProperty(this, \"previous\", async () => {\n      if (this.page === 1) {\n        return;\n      }\n\n      this.page--;\n      this.props.handlePageChange(this.page);\n    });\n  }\n\n  componentDidMount() {\n    console.log(\"LAST PAGE: \" + this.props.lastPage);\n    this.render();\n  }\n\n  render() {\n    console.log(\"This page: \" + this.page);\n    console.log(\"Paginator LAST PAGE: \" + this.props.lastPage);\n    return __jsx(\"nav\", {\n      className: \"paginator__pagination\"\n    }, __jsx(\"li\", {\n      className: \"paginator__page-item\"\n    }, __jsx(\"button\", {\n      onClick: this.previous,\n      className: \"paginator__pagination-previous\",\n      disabled: this.page === 1\n    }, \"Back\")), __jsx(\"li\", {\n      className: \"paginator__page-item\"\n    }, __jsx(\"button\", {\n      onClick: this.next,\n      className: \"paginator__pagination-next\",\n      disabled: this.page === this.props.lastPage\n    }, \"Next\")));\n  }\n\n}\n\nexport default Paginator;","map":{"version":3,"sources":["C:/Users/usb/Documents/GitHub/ids/apps/auth-admin-web/components/Paginator.tsx"],"names":["console","componentDidMount","render","lastPage"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,IAAA,SAAA,QAAA,OAAA;;AAGA,MAAA,SAAA,SAAA,SAAA,CAA+E;AAAA,EAAA,WAAA,CAAA,GAAA,IAAA,EAAA;AAAA,UAAA,GAAA,IAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,MAAA,EAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,WAAA,EAGjE,MAAM;AAAEA,MAAAA,OAAO,CAAPA,GAAAA,CAAAA,mBAAAA;AAHyD,KAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,MAAA,EAUtE,YAAY;AACjB,UAAI,KAAA,IAAA,KAAc,KAAA,KAAA,CAAlB,QAAA,EAAuC;AACrC;AACD;;AAED,WAAA,IAAA;AACA,WAAA,KAAA,CAAA,gBAAA,CAA4B,KAA5B,IAAA;AAhB2E,KAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,UAAA,EAmBlE,YAAY;AACrB,UAAI,KAAA,IAAA,KAAJ,CAAA,EAAqB;AACnB;AACD;;AAED,WAAA,IAAA;AACA,WAAA,KAAA,CAAA,gBAAA,CAA4B,KAA5B,IAAA;AAzB2E,KAAA,CAAA;AAAA;;AAK7EC,EAAAA,iBAAiB,GAAG;AAClBD,IAAAA,OAAO,CAAPA,GAAAA,CAAY,gBAAgB,KAAA,KAAA,CAA5BA,QAAAA;AACA,SAAA,MAAA;AACD;;AAoBDE,EAAAA,MAAM,GAAG;AACPF,IAAAA,OAAO,CAAPA,GAAAA,CAAY,gBAAgB,KAA5BA,IAAAA;AACAA,IAAAA,OAAO,CAAPA,GAAAA,CAAY,0BAA0B,KAAA,KAAA,CAAtCA,QAAAA;AAEA,WACE,KAAA,CAAA,KAAA,EAAA;AAAK,MAAA,SAAS,EAAC;AAAf,KAAA,EACE,KAAA,CAAA,IAAA,EAAA;AAAI,MAAA,SAAS,EAAC;AAAd,KAAA,EACE,KAAA,CAAA,QAAA,EAAA;AACE,MAAA,OAAO,EAAE,KADX,QAAA;AAEE,MAAA,SAAS,EAFX,gCAAA;AAGE,MAAA,QAAQ,EAAE,KAAA,IAAA,KAAc;AAH1B,KAAA,EAFJ,MAEI,CADF,CADF,EAUE,KAAA,CAAA,IAAA,EAAA;AAAI,MAAA,SAAS,EAAC;AAAd,KAAA,EACE,KAAA,CAAA,QAAA,EAAA;AACE,MAAA,OAAO,EAAE,KADX,IAAA;AAEE,MAAA,SAAS,EAFX,4BAAA;AAGE,MAAA,QAAQ,EAAE,KAAA,IAAA,KAAc,KAAA,KAAA,CAAWG;AAHrC,KAAA,EAZN,MAYM,CADF,CAVF,CADF;AAsBD;;AAtD4E;;AAyD/E,eAAA,SAAA","sourcesContent":["import React, { Component } from \"react\";\r\n\r\n\r\nclass Paginator extends Component<{ lastPage: number; handlePageChange: any }> {\r\n  page = 1;\r\n\r\n  useEffect = () => { console.log(\"component updated\"); };\r\n\r\n  componentDidMount() {\r\n    console.log(\"LAST PAGE: \" + this.props.lastPage)\r\n    this.render();\r\n  }\r\n\r\n  next = async () => {\r\n    if (this.page === this.props.lastPage) {\r\n      return;\r\n    }\r\n\r\n    this.page++;\r\n    this.props.handlePageChange(this.page);\r\n  };\r\n\r\n  previous = async () => {\r\n    if (this.page === 1) {\r\n      return;\r\n    }\r\n\r\n    this.page--;\r\n    this.props.handlePageChange(this.page);\r\n  };\r\n\r\n  render() {\r\n    console.log(\"This page: \" + this.page);\r\n    console.log(\"Paginator LAST PAGE: \" + this.props.lastPage);\r\n\r\n    return (\r\n      <nav className=\"paginator__pagination\">\r\n        <li className=\"paginator__page-item\">\r\n          <button\r\n            onClick={this.previous}\r\n            className=\"paginator__pagination-previous\"\r\n            disabled={this.page === 1}\r\n          >\r\n            Back\r\n          </button>\r\n        </li>\r\n        <li className=\"paginator__page-item\">\r\n          <button\r\n            onClick={this.next}\r\n            className=\"paginator__pagination-next\"\r\n            disabled={this.page === this.props.lastPage}\r\n          >\r\n            Next\r\n          </button>\r\n        </li>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Paginator;\r\n"]},"metadata":{},"sourceType":"module"}