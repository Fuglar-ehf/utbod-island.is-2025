{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Paginator from \"./Paginator\";\nimport Link from \"next/link\";\n\nclass Clients extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      clients: [],\n      rowCount: 0,\n      lastPage: 0,\n      count: 1,\n      page: 1\n    });\n\n    _defineProperty(this, \"componentDidMount\", async () => {\n      const response = await axios.get(`/api/clients?page=${this.state.page}&count=${this.state.count}`);\n      console.log(response);\n      this.setState({\n        clients: response.data.rows,\n        rowCount: response.data.count,\n        lastPage: Math.ceil(this.state.rowCount / this.state.count)\n      });\n      console.log(response.data);\n    });\n\n    _defineProperty(this, \"handlePageChange\", async page => {\n      this.page = page;\n      await this.componentDidMount();\n    });\n\n    _defineProperty(this, \"delete\", async clientId => {\n      if (window.confirm(\"Ertu viss um að þú viljir eyða þessari færslu?\")) {\n        const response = await axios.delete(`./clients/${clientId}`);\n        console.log(response);\n        await this.componentDidMount();\n      }\n    });\n\n    _defineProperty(this, \"edit\", async client => {\n      console.log(client);\n    });\n  }\n\n  changeCount(count) {\n    this.setState(this.state.count = +count + 1);\n    this.setState(this.state.lastPage = Math.ceil(this.state.rowCount / this.state.count));\n    this.setState(this.state.page = 1);\n    this.componentDidMount();\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      className: \"clients__container\"\n    }, __jsx(\"h2\", null, \"Vefir og sm\\xE1forrit\"), __jsx(\"div\", {\n      className: \"clients__container__options\"\n    }, __jsx(\"div\", {\n      className: \"clients__container__button\"\n    }, __jsx(Link, {\n      href: \"/client\"\n    }, __jsx(\"a\", {\n      className: \"clients__button__new\"\n    }, \"B\\xE6ta vi\\xF0 n\\xFDjum\"))), __jsx(\"div\", {\n      className: \"clients__container__field\"\n    }, __jsx(\"label\", {\n      htmlFor: \"count\",\n      className: \"clients__label\"\n    }, \"Fj\\xF6ldi \\xE1 s\\xED\\xF0u\"), __jsx(\"select\", {\n      id: \"count\",\n      onChange: e => this.changeCount(e.target.value),\n      className: \"clients__select\"\n    }, __jsx(\"option\", {\n      value: \"1\"\n    }, \"1\"), __jsx(\"option\", {\n      value: \"30\"\n    }, \"30\"), __jsx(\"option\", {\n      value: \"50\"\n    }, \"50\"), __jsx(\"option\", {\n      value: \"100\"\n    }, \"100\")))), __jsx(\"div\", {\n      className: \"client__container__table\"\n    }, __jsx(\"table\", {\n      className: \"clients__table\"\n    }, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", null, \"Au\\xF0kenni\"), __jsx(\"th\", null, \"Identity token lifetime\"), __jsx(\"th\", {\n      colSpan: 2\n    }))), __jsx(\"tbody\", null, this.state.clients.map(client => {\n      return __jsx(\"tr\", {\n        key: client.clientId\n      }, __jsx(\"td\", null, client.clientId), __jsx(\"td\", null, client.identityTokenLifetime), __jsx(\"td\", null, __jsx(\"button\", {\n        className: \"clients__button__edit\",\n        onClick: () => this.edit(client)\n      }, \"Breyta\")), __jsx(\"td\", null, __jsx(\"button\", {\n        className: \"clients__button__delete\",\n        onClick: () => this.delete(client.clientId)\n      }, \"Ey\\xF0a\")));\n    })))), __jsx(Paginator, {\n      lastPage: this.state.lastPage,\n      handlePageChange: this.handlePageChange\n    }));\n  }\n\n}\n\nexport default Clients;","map":{"version":3,"sources":["C:/Users/usb/Documents/GitHub/ids/apps/auth-admin-web/components/Clients.tsx"],"names":["clients","rowCount","lastPage","count","page","response","axios","console","Math","window","clientId","changeCount","render","e","client","handlePageChange"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport ClientDTO from \"../models/dtos/client-dto\";\r\nimport Paginator from \"./Paginator\";\r\nimport Link from \"next/link\";\r\n\r\nclass Clients extends Component {\r\n  state = {\r\n    clients: [],\r\n    rowCount: 0,\r\n    lastPage: 0,\r\n    count: 1,\r\n    page: 1\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    const response = await axios.get(\r\n      `/api/clients?page=${this.state.page}&count=${this.state.count}`\r\n    );\r\n    console.log(response);\r\n    this.setState(\r\n      {\r\n        clients: response.data.rows,\r\n        rowCount: response.data.count,\r\n        lastPage: Math.ceil(this.state.rowCount / this.state.count)\r\n      }\r\n    );\r\n\r\n    console.log(response.data);\r\n  };\r\n\r\n  handlePageChange = async (page: number) => {\r\n    this.page = page;\r\n    await this.componentDidMount();\r\n  };\r\n\r\n  delete = async (clientId: string) => {\r\n    if (window.confirm(\"Ertu viss um að þú viljir eyða þessari færslu?\")) {\r\n      const response = await axios.delete(`./clients/${clientId}`);\r\n      console.log(response);\r\n      await this.componentDidMount();\r\n    }\r\n  };\r\n\r\n  edit = async (client: ClientDTO) => {\r\n    console.log(client);\r\n  };\r\n\r\n  changeCount(count: string) {\r\n    this.setState(this.state.count = +count+1);\r\n    this.setState(this.state.lastPage = Math.ceil(this.state.rowCount / this.state.count));\r\n    this.setState(this.state.page = 1);\r\n    this.componentDidMount();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"clients__container\">\r\n        <h2>Vefir og smáforrit</h2>\r\n        <div className=\"clients__container__options\">\r\n          <div className=\"clients__container__button\">\r\n            <Link href={\"/client\"}>\r\n              <a className=\"clients__button__new\">Bæta við nýjum</a>\r\n            </Link>\r\n          </div>\r\n          <div className=\"clients__container__field\">\r\n            <label htmlFor=\"count\" className=\"clients__label\">\r\n              Fjöldi á síðu\r\n            </label>\r\n            <select\r\n              id=\"count\"\r\n              onChange={(e) => this.changeCount(e.target.value)}\r\n              className=\"clients__select\"\r\n            >\r\n              <option value=\"1\">1</option>\r\n              <option value=\"30\">30</option>\r\n              <option value=\"50\">50</option>\r\n              <option value=\"100\">100</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className=\"client__container__table\">\r\n          <table className=\"clients__table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Auðkenni</th>\r\n                <th>Identity token lifetime</th>\r\n                <th colSpan={2}></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.state.clients.map((client: ClientDTO) => {\r\n                return (\r\n                  <tr key={client.clientId}>\r\n                    <td>{client.clientId}</td>\r\n                    <td>{client.identityTokenLifetime}</td>\r\n                    <td>\r\n                      <button\r\n                        className=\"clients__button__edit\"\r\n                        onClick={() => this.edit(client)}\r\n                      >\r\n                        Breyta\r\n                      </button>\r\n                    </td>\r\n                    <td>\r\n                      <button\r\n                        className=\"clients__button__delete\"\r\n                        onClick={() => this.delete(client.clientId)}\r\n                      >\r\n                        Eyða\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <Paginator\r\n          lastPage={this.state.lastPage}\r\n          handlePageChange={this.handlePageChange}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Clients;\r\n"]},"metadata":{},"sourceType":"module"}