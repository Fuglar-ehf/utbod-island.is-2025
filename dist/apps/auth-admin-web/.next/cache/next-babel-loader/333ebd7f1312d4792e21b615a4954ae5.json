{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport { useRouter } from \"next/router\";\nexport default function () {\n  var router = useRouter();\n\n  var toMainPage = function toMainPage() {\n    router.replace(\"/\");\n  };\n\n  return __jsx(\"div\", {\n    className: \"error404\"\n  }, __jsx(\"h1\", null, \"Page not found\"), __jsx(\"button\", {\n    onClick: toMainPage,\n    className: \"error404__button__back\"\n  }, __jsx(\"a\", null, \"Back to main page\")));\n}\n;\n\nvar _a, _b; // Legacy CSS implementations will `eval` browser code in a Node.js context\n// to extract CSS. For backwards compatibility, we need to check we're in a\n// browser context before continuing.\n\n\nif (typeof self !== 'undefined' && // AMP / No-JS mode does not inject these helpers:\n'$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null; // This cannot happen in MainTemplate because the exports mismatch between\n  // templating and execution.\n\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id); // A module can be accepted automatically based on its exports, e.g. when\n  // it is a Refresh Boundary.\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    // Save the previous exports on update so we can compare the boundary\n    // signatures.\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    }); // Unconditionally accept an update to this module, we'll check if it's\n    // still a Refresh Boundary later.\n\n    module.hot.accept(); // This field is set when the previous version of this module was a\n    // Refresh Boundary, letting us know we need to check for invalidation or\n    // enqueue an update.\n\n    if (prevExports !== null) {\n      // A boundary can become ineligible if its exports are incompatible\n      // with the previous exports.\n      //\n      // For example, if you add/remove/change exports, we'll want to\n      // re-execute the importing modules, and force those components to\n      // re-render. Similarly, if you convert a class component to a\n      // function, we want to invalidate the boundary.\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    // Since we just executed the code for the module, it's possible that the\n    // new exports made it ineligible for being a boundary.\n    // We only care about the case when we were _previously_ a boundary,\n    // because we already accepted this update (accidental side effect).\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}","map":{"version":3,"sources":["C:/Users/usb/Documents/GitHub/ids/apps/auth-admin-web/pages/404.tsx"],"names":["router","useRouter","toMainPage"],"mappings":";AAAA,OAAA,KAAA,MAAA,OAAA;AACA,SAAA,SAAA,QAAA,aAAA;AAEA,eAAe,YAAY;AACzB,MAAMA,MAAM,GAAGC,SAAf,EAAA;;AAEA,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvBF,IAAAA,MAAM,CAANA,OAAAA,CAAAA,GAAAA;AADF,GAAA;;AAIA,SACE,KAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EACE,KAAA,CAAA,IAAA,EAAA,IAAA,EADF,gBACE,CADF,EAEE,KAAA,CAAA,QAAA,EAAA;AAAQ,IAAA,OAAO,EAAf,UAAA;AAA6B,IAAA,SAAS,EAAC;AAAvC,GAAA,EACE,KAAA,CAAA,GAAA,EAAA,IAAA,EAJN,mBAIM,CADF,CAFF,CADF;AAQD","sourcesContent":["import React from \"react\";\r\nimport { useRouter } from \"next/router\";\r\n\r\nexport default function () {\r\n  const router = useRouter();\r\n\r\n  const toMainPage = () => {\r\n    router.replace(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"error404\">\r\n      <h1>Page not found</h1>\r\n      <button onClick={toMainPage} className=\"error404__button__back\">\r\n        <a>Back to main page</a>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}