name: CI/CD pipeline
on:
  # push:
  #   branches:
  #     - unicorn-pipe-rel2
  workflow_dispatch:
  create:
  pull_request:
    types:
      - opened
      - synchronize
      - labeled

concurrency:
  # See https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#example-using-a-fallback-value
  group: push-unicorn${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash
jobs:
  prepare:
    name: Setup
    runs-on: ec2-runners
    container:
      image: public.ecr.aws/m3u4c4h9/island-is/actions-runner-public:latest
    timeout-minutes: 10
    outputs:
      RUNNER: ${{ runner.name }}
    steps:
      - run: echo "selected runner = ${{ runner.name }}"

  check-unicorn:
    name: Check if app is on unicorn track
    needs: prepare
    runs-on: ${{needs.prepare.outputs.RUNNER}}

    outputs:
      IS_UNICORN: ${{ steps.unicorn-affected.outputs.IS_UNICORN }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version-file: 'package.json'

      - name: Setup yarn
        run: corepack enable

      - name: Get cache
        id: get-cache
        uses: ./.github/actions/get-cache
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          enable-cache: 'node_modules,generated-files'

      - name: Check unicorn affected
        id: unicorn-affected
        env:
          BaseRef: ${{ github.base_ref }} #The target branch e.g. main (feature/unicorn-app)
          HeadRef: ${{ github.head_ref }} #The branch being merged e.g. (unicorn-pipe-rel2)
        run: |
          echo "Comparing nx affected for $HeadRef using origin/$BaseRef as base branch"
          echo IS_UNICORN=$(node scripts/ci/unicorn-utils.mjs "{\"baseBranch\": \"origin/$BaseRef\", \"mergeBranch\": \"$HeadRef\" }") >> "$GITHUB_OUTPUT"
  found-unicorn:
    if: needs.check-unicorn.outputs.IS_UNICORN == 'true'
    needs:
      - check-unicorn
      - prepare
    runs-on: ${{needs.prepare.outputs.RUNNER}}
    name: Create a unicorn Relese
    steps:
      - name: Create release
        env:
          PR_NUMBER: ${{ github.event.number }}
          BaseRef: ${{ github.base_ref }}
          HeadRef: ${{ github.head_ref }}
          RefName: ${{ github.ref_name }}
        run: |
          echo "Creating a release for unicorn
          node scripts/ci/create-release.mjs $PR_NUMBER
        #   if: ${{ steps.unicorn-affected.outputs.IS_UNICORN == 'true' }}

        # - name: Create release
        #   env:
        #     PR_NUMBER: ${{ github.event.number }}
        #     BaseRef: ${{ github.base_ref }}#     PR_NUMBER: 17134
        #     HeadRef: ${{ github.head_ref }}#     BaseRef: feature/unicorn-app
        #     RefName: ${{ github.ref_name }}#     HeadRef: unicorn-pipe-rel2
        #   run: |
        #       node scripts/ci/create-release.mjs $PR_NUMBER

