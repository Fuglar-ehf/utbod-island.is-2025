name: Monorepo pipeline - build and deploy

on:
  push:
    branches:
      - chore/runner-debug

defaults:
  run:
    shell: bash

env:
  COMPOSE_HTTP_TIMEOUT: 180
  SKIP_GENERATED_CACHE: ${{ contains(github.event.pull_request.labels.*.name, 'skip-generated-cache') }}
  NX_AFFECTED_ALL: ${{ contains(github.event.pull_request.labels.*.name, 'nx-affected-all') }}
  NX_SKIP_NX_CACHE: ${{ contains(github.event.pull_request.labels.*.name, 'skip-nx-cache') }}
  DISABLE_CHUNKS: 'true'
  DISABLE_GROUPING: 'false'
  DISABLE_PROBLEMATIC: 'false'
  CHUNK_SIZE: '8'
  MAX_JOBS: '3'
  NX_PARALLEL: '2'
  NX_MAX_PARALLEL: '4'
  NX_TASKS_RUNNER: ci
  NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
  S3_DOCKER_CACHE_BUCKET: ${{ secrets.S3_DOCKER_CACHE_BUCKET }}
  RUNS_ON_S3_BUCKET_CACHE: ${{ secrets.S3_DOCKER_CACHE_BUCKET }}
  AWS_REGION: eu-west-1
  GENERATED_FILES: ${{ github.workspace }}/${{ github.sha }}.tar.gz
  AFFECTED_ALL: ${{ secrets.AFFECTED_ALL }}
  SERVERSIDE_FEATURES_ON: ''
  DOCKER_REGISTRY: 821090935708.dkr.ecr.eu-west-1.amazonaws.com
  DOCKER_BASE_IMAGE_REGISTRY: 821090935708.dkr.ecr.eu-west-1.amazonaws.com/ecr-public
  CI_DEBUG: ${{ contains(github.event.pull_request.labels.*.name, 'ci debug') }}
  SKIP_TESTS: ${{ contains(github.event.pull_request.labels.*.name, 'test nothing') }}
  DEPLOY_FEATURE: ${{ contains(github.event.pull_request.labels.*.name, 'deploy-feature') }}
  CYPRESS_CACHE_FOLDER: ${{ github.workspace }}/.cypress-cache
  YARN_ENABLE_HARDENED_MODE: '0'

jobs:
  prepare:
    uses: ./.github/workflows/install.yml
    secrets: inherit
    with:
      main_branch: ${{ github.base_ref }}

  debug:
    runs-on: arc-runners
    timeout-minutes: 90

    steps:

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0


      - name: Setup yarn
        uses: ./.github/actions/setup-yarn
        with:
          RUNS_ON_S3_BUCKET_CACHE: ${{ secrets.S3_DOCKER_CACHE_BUCKET }}

      - name: load-deps
        uses: ./.github/actions/load-deps



      - name: Lint head
        id: lint-head
        run: |
          AFFECTED_PROJECTS='judicial-system-web, judicial-system-types, judicial-system-digital-mailbox-api, judicial-system-message-handler, judicial-system-formatters, judicial-system-backend, judicial-system-xrd-api, judicial-system-api, judicial-system-scheduler, judicial-system-message, judicial-system-consts, judicial-system-auth'
          lints=$(mktemp -t lint-head.XXXXXX)
          echo "lints-file=$lints" | tee -a "$GITHUB_OUTPUT"
          yarn nx run-many -t lint --projects "$AFFECTED_PROJECTS" |
            tee -a "$lints" | # Show output when running, but preserve pipe-chaining
            grep -oP '(?<=âœ– )(\d+)(?= problems)' | # Find number of problems
            awk '{ SUM += $1} END { SUM /= 2; printf "lint-count=%d",SUM }' | # sum number of problems, divide by 2 because each problem summary occurs twice
            tee -a "$GITHUB_OUTPUT" # Finally create output
