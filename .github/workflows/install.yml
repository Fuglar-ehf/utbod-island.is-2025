name: 'Prep Dependencies'
on:
  workflow_call:
    outputs:
      TEST_CHUNKS:
        value: ${{ jobs.install.outputs.TEST_CHUNKS }}
      E2E_CHUNKS:
        value: ${{ jobs.install.outputs.E2E_CHUNKS }}
      E2E_BUILD_ID:
        value: ${{ jobs.install.outputs.BUILD_ID }}
      BUILD_CHUNKS:
        value: ${{ jobs.install.outputs.BUILD_CHUNKS }}
      LINT_CHUNKS:
        value: ${{ jobs.install.outputs.LINT_CHUNKS }}
      NX_HEAD:
        value: ${{ jobs.install.outputs.NX_HEAD }}
      NX_BASE:
        value: ${{ jobs.install.outputs.NX_BASE }}
      DEPLOY_FEATURE:
        value: ${{ jobs.install.outputs.DEPLOY_FEATURE }}
env:
  COMPOSE_HTTP_TIMEOUT: 180
  CHUNK_SIZE: ${{ vars.CHUNK_SIZE || 3 }}
  DISABLE_GROUPING: ${{ vars.DISABLE_GROUPING || false }}
  DISABLE_CHUNKS: ${{ vars.DISABLE_CHUNKS || false }}
  DISABLE_PROBLEMATIC: ${{ vars.DISABLE_PROBLEMATIC || false }}
  MAX_JOBS: ${{ vars.MAX_JOBS || 2 }}
  NX_PARALLEL: ${{ vars.NX_PARALLEL || 2 }}
  NX_MAX_PARALLEL: ${{ vars.NX_MAX_PARALLEL || 4 }}
  NX_TASKS_RUNNER: ci
  NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
  AFFECTED_ALL: ${{ secrets.AFFECTED_ALL }}
  SERVERSIDE_FEATURES_ON: ''
  DOCKER_REGISTRY: 821090935708.dkr.ecr.eu-west-1.amazonaws.com
  GENERATED_FILES: ${{ github.sha }}.tar.gz
  CHUNKS_DEBUG: '["web","air-discount-scheme-api,air-discount-scheme-backend,air-discount-scheme-web"]'
  DEPLOY_FEATURE: ${{ contains(github.event.pull_request.labels.*.name, 'deploy-feature') }}

jobs:
  install:
    outputs:
      LINT_CHUNKS: ${{ steps.lint_projects.outputs.LINT_CHUNKS }}
      TEST_CHUNKS: ${{ steps.test_projects.outputs.TEST_CHUNKS }}
      E2E_CHUNKS: ${{ steps.e2e_projects.outputs.E2E_CHUNKS }}
      E2E_BUILD_ID: ${{ steps.e2e_projects.outputs.BUILD_ID }}
      BUILD_CHUNKS: ${{ steps.build_projects.outputs.BUILD_CHUNKS }}
      NX_HEAD: ${{ steps.export-sha.outputs.NX_HEAD }}
      NX_BASE: ${{ steps.export-sha.outputs.NX_BASE }}
      DEPLOY_FEATURE: ${{ steps.set-outputs.outputs.DEPLOY_FEATURE }}
    runs-on: arc-runners
    steps:
      - name: Setup Yarn
        shell: bash
        run: |
          corepack enable
          corepack prepare --activate
          yarn --version

      - name: Link pre-installed dependencies
        shell: bash
        run: |
          rm -rf node_modules
          ln -s /home/runner/dependencies/node_modules .
          ln -s /home/runner/dependencies/.yarn/cache .yarn/
          ln -s /home/runner/dependencies/.yarn/install-state.gz .yarn/
          echo "NODE_PATH=/home/runner/dependencies/node_modules:$NODE_PATH" >> $GITHUB_ENV

      - uses: ./.github/actions/prep-deps

      - name: Derive appropriate SHAs
        uses: nrwl/nx-set-shas@v4

      - name: Set base/head sha output
        id: export-sha
        shell: bash
        run: |
          echo NX_HEAD="${{ env.NX_HEAD }}" >> "$GITHUB_OUTPUT"
          echo NX_BASE="${{ env.NX_BASE }}" >> "$GITHUB_OUTPUT"
          # NOTE: we reference BASE and HEAD elsewhere
          echo HEAD="${{ env.NX_HEAD }}" >> "$GITHUB_ENV"
          echo BASE="${{ env.NX_BASE }}" >> "$GITHUB_ENV"

          echo "Current base SHA is ${{ env.NX_BASE }} and head SHA is ${{ env.NX_HEAD }}"
          echo "{\"base_sha\": \"${{ env.NX_BASE }}\", \"head_sha\":\"${{ env.NX_HEAD }}\"}" > event.json

      - name: Git bot config
        id: git-bot-config
        run: |
          git config --global user.email "ci@island.is"
          git config --global user.name "CI Bot"

      # This is to increase the retention days for our GitHub Actions run events
      # See this for more information:
      # https://github.blog/changelog/2020-10-08-github-actions-ability-to-change-retention-days-for-artifacts-and-logs/
      - name: Keep PR run event
        uses: actions/upload-artifact@b18b1d32f3f31abcdc29dee3f2484801fe7822f4

        # Don't run this step locally
        if: ${{ !github.event.localrun }}
        with:
          name: pr-event
          path: event.json
          retention-days: 90
          include-hidden-files: true
          if-no-files-found: error

      - name: Prepare lint targets
        id: lint_projects
        env:
          # Linting is easy, no need to split/chunk it
          DISABLE_CHUNKS: 'true'
          DISABLE_GROUPING: 'true'
          DISABLE_PROBLEMATIC: 'true'
        run: |
          set -euo pipefail
          CHUNKS="$(./scripts/ci/generate-chunks.sh lint)"
          if [[ "$CHUNKS" != "[]" ]]; then
            echo "CHUNKS={\"projects\":$CHUNKS}" >> "$GITHUB_OUTPUT"
          fi

      - name: Prepare test targets
        id: test_projects
        run: |
          set -euo pipefail
          CHUNKS="$(./scripts/ci/generate-chunks.sh test)"
          if [[ "$CHUNKS" != "[]" ]]; then
            echo "CHUNKS={\"projects\":$CHUNKS}" >> "$GITHUB_OUTPUT"
          fi

      - name: Prepare e2e targets
        id: e2e_projects
        env:
          CHUNK_SIZE: 1
        run: |
          set -euo pipefail
          CHUNKS="$(./scripts/ci/generate-chunks.sh e2e-ci)"
          if [[ "$CHUNKS" != "[]" ]]; then
            echo "CHUNKS={\"projects\":$CHUNKS}" >> "$GITHUB_OUTPUT"
          fi
          echo BUILD_ID="$GITHUB_RUN_ID-$GITHUB_RUN_NUMBER-$(uuidgen)" >> "$GITHUB_OUTPUT"

      - name: Prepare build targets
        id: build_projects
        run: |
          set -euo pipefail
          CHUNKS="$(./scripts/ci/generate-chunks.sh build)"
          if [[ "$CHUNKS" != "[]" ]]; then
            echo "CHUNKS={\"projects\":$CHUNKS}" >> "$GITHUB_OUTPUT"
          fi

      - name: License audit Node modules
        run: ./scripts/ci/20_license-audit.sh

      - name: Check user permissions
        uses: actions-cool/check-user-permission@v2
        id: check-permission
        # This fails locally without a token, and only prevents "admin" label usage
        if: ${{ !github.event.localrun }}

      - name: Set magic env if test-everything label is set
        if: ${{ contains(github.event.pull_request.labels.*.name, 'test everything') && steps.check-permission.outcome == 'success' && steps.check-permission.outputs['user-permission'] == 'admin' }}
        run: |
          echo "AFFECTED_ALL=7913-$GITHUB_HEAD_REF" >> "$GITHUB_ENV"

      - name: Warn if user does not have the required permissions
        if: ${{ contains(github.event.pull_request.labels.*.name, 'test everything') && steps.check-permission.outcome == 'success'&& steps.check-permission.outputs['user-permission'] != 'admin' }}
        run: |
          echo "## WARN permissions" >> "$GITHUB_STEP_SUMMARY"
          echo "User '$GITHUB_ACTOR' does not have the required permissions to apply the 'test everything' label" >> "$GITHUB_STEP_SUMMARY"

      - name: Set outputs
        id: set-outputs
        run: |
          echo "DEPLOY_FEATURE: $DEPLOY_FEATURE"
          echo "DEPLOY_FEATURE=$DEPLOY_FEATURE" >> $GITHUB_OUTPUT
