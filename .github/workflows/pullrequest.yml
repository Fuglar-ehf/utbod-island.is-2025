name: Monorepo pipeline - pull request

on:
  pull_request: {}
  workflow_dispatch: {}

defaults:
  run:
    shell: bash

concurrency:
  # See https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#example-using-a-fallback-value
  group: pullrequest-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  COMPOSE_HTTP_TIMEOUT: 180
  SKIP_GENERATED_CACHE: ${{ contains(github.event.pull_request.labels.*.name, 'skip-generated-cache') }}
  NX_AFFECTED_ALL: ${{ contains(github.event.pull_request.labels.*.name, 'nx-affected-all') }}
  NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
  DISABLE_CHUNKS: 'true'
  DISABLE_GROUPING: 'false'
  DISABLE_PROBLEMATIC: 'false'
  CHUNK_SIZE: '8'
  MAX_JOBS: '1'
  NX_PARALLEL: '2'
  NX_MAX_PARALLEL: '4'
  NX_TASKS_RUNNER: ci

jobs:
  prepare:
    runs-on: arc-runners
    timeout-minutes: 35

    env:
      AFFECTED_ALL: ${{ secrets.AFFECTED_ALL }}
      SERVERSIDE_FEATURES_ON: ''
      DOCKER_REGISTRY: 821090935708.dkr.ecr.eu-west-1.amazonaws.com/
      DOCKER_BASE_IMAGE_REGISTRY: 821090935708.dkr.ecr.eu-west-1.amazonaws.com/ecr-public

    outputs:
      TEST_CHUNKS: ${{ steps.test_projects.outputs.CHUNKS }}
      E2E_CHUNKS: ${{ steps.e2e_projects.outputs.CHUNKS }}
      E2E_BUILD_ID: ${{ steps.e2e_projects.outputs.BUILD_ID }}
      LINT_CHUNKS: ${{ steps.lint_projects.outputs.CHUNKS }}
      BUILD_CHUNKS: ${{ steps.build_projects.outputs.CHUNKS }}
      CACHE_KEYS: ${{ steps.get-cache.outputs.keys }}
      NX_BASE: ${{ steps.export-sha.outputs.NX_BASE }}
    steps:
      # Creates homedir if missing (e.g. when set to /tmp/runner/ when running locally with act)
      - name: Debug home etc.
        if: ${{ github.event.localrun }}
        run: |
          echo "docker version: $(docker --version)"
          echo "User: HOME=$HOME, PWD=$PWD, id=$(id)"
          mkdir -p "$HOME"
          ls -lah "$HOME"

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version-file: 'package.json'

      - name: Setup yarn
        run: corepack enable

      - name: Check node version
        run: |
          set -euo pipefail
          node -v
          yarn --version
          ls -l "$(which node)"

      - name: Derive appropriate SHAs
        uses: nrwl/nx-set-shas@v4

      - run: |
          echo "BASE: ${{ env.NX_BASE }}"
          echo "HEAD: ${{ env.NX_HEAD }}"

      - name: Checking out relevant branches
        id: export-sha
        run: |
          set -euo pipefail
          echo "CHUNK_SIZE: $CHUNK_SIZE"
          echo "MAX_JOBS: $MAX_JOBS"
          echo "NX_PARALLEL: $NX_PARALLEL"
          set -x

          git config --global user.email "ci@island.is"
          git config --global user.name "CI Bot"

          BASE_SHA=${{ env.NX_BASE }}
          HEAD_SHA=${{ env.NX_HEAD }}
          echo "BASE=$BASE_SHA" >> "$GITHUB_ENV"
          echo "NX_BASE=$BASE_SHA" >> "$GITHUB_OUTPUT"
          echo "Current base SHA is '$BASE_SHA' and head SHA is '$HEAD_SHA'"
          echo "{\"base_sha\": \"$BASE_SHA\", \"head_sha\":\"$HEAD_SHA\"}" > event.json

      # This is to increase the retention days for our GitHub Actions run events
      # See this for more information:
      # https://github.blog/changelog/2020-10-08-github-actions-ability-to-change-retention-days-for-artifacts-and-logs/
      - name: Keep PR run event
        uses: actions/upload-artifact@b18b1d32f3f31abcdc29dee3f2484801fe7822f4
        # Don't run this step locally
        if: ${{ !github.event.localrun }}
        with:
          name: pr-event
          path: event.json
          retention-days: 90
          include-hidden-files: true
          if-no-files-found: error

      - name: Get cache
        id: get-cache
        uses: ./.github/actions/get-cache
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          enable-cache: 'node_modules,cypress'

      - name: License audit Node modules
        run: ./scripts/ci/20_license-audit.sh

      - name: Check user permissions
        uses: actions-cool/check-user-permission@v2
        id: check-permission
        # This fails locally without a token, and only prevents "admin" label usage
        if: ${{ !github.event.localrun }}

      - name: Set magic env if test-everything label is set
        if: ${{ contains(github.event.pull_request.labels.*.name, 'test everything') && steps.check-permission.outcome == 'success' && steps.check-permission.outputs['user-permission'] == 'admin' }}
        run: |
          echo "AFFECTED_ALL=7913-$GITHUB_HEAD_REF" >> "$GITHUB_ENV"

      - name: Warn if user does not have the required permissions
        if: ${{ contains(github.event.pull_request.labels.*.name, 'test everything') && steps.check-permission.outcome == 'success'&& steps.check-permission.outputs['user-permission'] != 'admin' }}
        run: |
          echo "## WARN permissions" >> "$GITHUB_STEP_SUMMARY"
          echo "User '$GITHUB_ACTOR' does not have the required permissions to apply the 'test everything' label" >> "$GITHUB_STEP_SUMMARY"
      - name: Formatting
        id: format-and-linter
        uses: ./.github/actions/format-and-linter
        with:
          push-changes: 'true'
      - name: Check release-manager approval
        id: check-release-manager-approval
        if: ${{ contains(github.event.pull_request.head.ref, '/pre-release/') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          node -r esbuild-register .github/actions/check-team-approval.ts release-managers
      - name: Prepare nx
        id: prepare-nx
        env:
          WORKFLOW_FILE: .github/actions/workflow.yml
        run: |
          node scripts/ci/_create_agents.mjs
      - name: Start nx
        uses: ./.github/actions/workflow.yml
    
  linting-workspace:
    needs:
      - prepare
    runs-on: arc-runners
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: 'package.json'

      - name: Setup yarn
        run: corepack enable

      - name: Get cache
        id: get-cache
        uses: ./.github/actions/get-cache
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          keys: ${{ needs.prepare.outputs.CACHE_KEYS }}
          enable-cache: 'node_modules'

      - name: Linting workspace
        run: ./scripts/ci/20_lint-workspace.sh

  run-shellcheck:
    needs:
      - prepare
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4
      - uses: reviewdog/action-shellcheck@v1
        with:
          github_token: ${{ secrets.github_token }}
          reporter: github-pr-review
          fail-level: info
          exclude: >-
            */node_modules/*
  success:
    runs-on: arc-runners
    if: ${{ !cancelled() }}
    needs:
      - prepare
      - linting-workspace
      - run-shellcheck
    steps:
      - name: Check prepare success
        run: '[[ ${{ needs.prepare.result }} == "success" ]] || exit 1'
      - name: Check linting-workspace success
        run: '[[ ${{ needs.linting-workspace.result }} != "failure" ]] || exit 1'
      - name: Check run-shellcheck success
        run: '[[ ${{ needs.run-shellcheck.result }} != "failure" ]] || exit 1'
      - name: Announce success
        run: echo "Build is successful"
