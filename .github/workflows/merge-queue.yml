name: Validate code in the merge queue (post merge)

on:
  workflow_dispatch: {}
  merge_group:

  push:
    branches:
      - feature/test-in-mergequeue

defaults:
  run:
    shell: bash -euxo pipefail {0}

concurrency:
  group: merge-queue-post-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  COMPOSE_HTTP_TIMEOUT: 180
  CHUNK_SIZE: ${{ vars.CHUNK_SIZE || 3 }}
  DISABLE_GROUPING: ${{ vars.DISABLE_GROUPING || false }}
  DISABLE_CHUNKS: ${{ vars.DISABLE_CHUNKS || false }}
  DISABLE_PROBLEMATIC: ${{ vars.DISABLE_PROBLEMATIC || false }}
  MAX_JOBS: ${{ vars.MAX_JOBS || 2 }}
  NX_PARALLEL: ${{ vars.NX_PARALLEL || 2 }}
  NX_MAX_PARALLEL: ${{ vars.NX_MAX_PARALLEL || 4 }}
  GENERATED_FILES: ${{ github.sha }}.tar.gz

jobs:
  prepare:
    runs-on: arc-test
    timeout-minutes: 35
    env:
      AFFECTED_ALL: ${{ secrets.AFFECTED_ALL }}
      SERVERSIDE_FEATURES_ON: ''
      DOCKER_REGISTRY: 821090935708.dkr.ecr.eu-west-1.amazonaws.com/

    outputs:
      TEST_CHUNKS: ${{ steps.build_info.outputs.test_chunks }}
      E2E_CHUNKS: ${{ steps.build_info.outputs.e2e_chunks }}
      E2E_BUILD_ID: ${{ steps.build_info.outputs.build_iD }}
      BUILD_CHUNKS: ${{ steps.build_info.outputs.build_chunks }}
      NX_BASE: ${{ steps.build_info.outputs.nx_base }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: ./.github/actions/prep-deps
        id: build_info
        with:
          generated_files: ${{ env.GENERATED_FILES }}

  tests:
    needs:
      - prepare
    if: needs.prepare.outputs.TEST_CHUNKS
    runs-on: arc-test
    timeout-minutes: 45
    env:
      AFFECTED_PROJECTS: ${{ matrix.projects }}
      NX_BASE: ${{ needs.prepare.outputs.NX_BASE }}
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.prepare.outputs.TEST_CHUNKS) }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/load-deps
        with:
          generated_files: ${{ env.GENERATED_FILES }}

      - uses: ./.github/actions/unit-test
        with:
          dd-api-key: '${{ secrets.DD_API_KEY }}'
          codecov-token: ${{ secrets.CODECOV_TOKEN }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          docker-registry: 821090935708.dkr.ecr.eu-west-1.amazonaws.com/
  e2e-debug:
    needs:
      - prepare
    if: needs.prepare.outputs.E2E_CHUNKS
    runs-on: arc-test
    steps:
      - run: echo "${{ fromJson(needs.prepare.outputs.E2E_CHUNKS) }}"

  e2e:
    needs:
      - prepare
    if: needs.prepare.outputs.E2E_CHUNKS
    runs-on: arc-test
    timeout-minutes: 45
    env:
      AFFECTED_PROJECT: ${{ matrix.projects }}
      CYPRESS_PROJECT_ID: 4q7jz8
      CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
      API_MOCKS: 'true'
      NODE_OPTIONS: --max-old-space-size=4096
      E2E_BUILD_ID: '${{ needs.prepare.outputs.E2E_BUILD_ID }}-${{ github.run_attempt }}'
      NX_BASE: ${{ needs.prepare.outputs.NX_BASE }}
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.prepare.outputs.E2E_CHUNKS) }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/load-deps
        with:
          generated_files: ${{ env.GENERATED_FILES }}

      - name: Running e2e tests
        run: ./scripts/ci/40_e2e.sh "${AFFECTED_PROJECT}"

  build:
    needs:
      - prepare
    runs-on: arc-test
    timeout-minutes: 35
    env:
      AFFECTED_PROJECTS: ${{ matrix.projects }}
      NX_BASE: ${{ needs.prepare.outputs.NX_BASE }}
    strategy:
      fail-fast: true
      matrix: ${{ fromJson(needs.prepare.outputs.BUILD_CHUNKS) }}
    if: needs.prepare.outputs.BUILD_CHUNKS
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/load-deps
        with:
          generated_files: ${{ env.GENERATED_FILES }}

      - name: Building
        run: ./scripts/ci/run-in-parallel-native.sh build

  success:
    runs-on: arc-test
    if: ${{ !cancelled() }}
    needs:
      - prepare
      - tests
      - e2e
      - build
    steps:
      - name: Announce success
        run: echo "Build is successful"
      - name: Check prepare success
        run: '[[ ${{ needs.prepare.result }} == "success" ]] || exit 1'
      - name: Check tests success
        run: '[[ ${{ needs.tests.result }} != "failure" ]] || exit 1'
      - name: Check e2e success
        run: |
          echo ${{ needs.e2e.result }}
          '[[ ${{ needs.e2e.result }} != "failure" ]] || exit 1'
      - name: Check build success
        run: '[[ ${{ needs.build.result }} != "failure" ]] || exit 1'

  # Remove this as a required status check and switch to something more meaningful
  codeowners-check:
    name: Lint CODEOWNERS
    runs-on: arc-test
    env:
      CHECK: 'false'
    steps:
      - name: Codeowners validation
        run: |
          exit 0
