name: Validate code in the merge queue (post merge)

on:
  workflow_dispatch: {}
  merge_group:
  pull_request:
    # For debugging with 'ci debug' label
    types:
      - synchronize
      - labeled
defaults:
  run:
    shell: bash -euo pipefail {0}

concurrency:
  group: merge-queue-post-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  COMPOSE_HTTP_TIMEOUT: 180
  SKIP_GENERATED_CACHE: ${{ contains(github.event.pull_request.labels.*.name, 'skip-generated-cache') }}
  NX_AFFECTED_ALL: ${{ contains(github.event.pull_request.labels.*.name, 'nx-affected-all') }}
  CHUNK_SIZE: ${{ vars.CHUNK_SIZE || 3 }}
  DISABLE_GROUPING: ${{ vars.DISABLE_GROUPING || false }}
  DISABLE_CHUNKS: ${{ vars.DISABLE_CHUNKS || false }}
  DISABLE_PROBLEMATIC: ${{ vars.DISABLE_PROBLEMATIC || false }}
  MAX_JOBS: ${{ vars.MAX_JOBS || 2 }}
  NX_PARALLEL: ${{ vars.NX_PARALLEL || 2 }}
  NX_MAX_PARALLEL: ${{ vars.NX_MAX_PARALLEL || 4 }}
  NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
  NX_TASKS_RUNNER: ci

jobs:
  prepare:
    if: ${{ github.event_name != 'pull_request' || contains(github.event.pull_request.labels.*.name, 'ci debug') }}
    runs-on: arc-runners
    outputs:
      affected: ${{ steps.affected.outputs.build-chunks }}
      nx: ${{ steps.affected.outputs.nx }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: ./.github/actions/set-cache-url
        with:
          github-token: ${{ github.token }}
      - uses: actions/setup-node@v4
        with:
          node-version-file: 'package.json'
          cache: yarn
      - name: Get cache
        id: get_cache
        uses: ./.github/actions/get-cache
        with:
          github-token: ${{ github.token }}
          enable-cache: node_modules
      - name: Derive appropriate SHAs
        if: ${{ !github.event.localrun }}
        uses: nrwl/nx-set-shas@v4
      - name: Setup yarn
        run: |
          ls -lah node_modules
          # Cached by GitHub actions
          corepack enable
          # Cached by `get-cache` above
          yarn install --immutable
      - name: Find affected projects
        id: affected
        env:
          BASE: ${{ env.NX_BASE || env.GITHUB_BASE_REF || github.event.pull_request.base.sha }}
          HEAD: ${{ env.NX_HEAD || env.GITHUB_HEAD_REF || github.event.pull_request.head.sha }}
          is_debug: ${{ contains(github.event.pull_request.labels.*.name, 'ci debug') }}
        run: |
          if [[ "$is_debug" == true ]]; then
            chunks='build-chunks={\"projects\":["web","air-discount-scheme-api,air-discount-scheme-backend,air-discount-scheme-web","license-api","system-e2e","island-ui-storybook"]}'
          else
            chunks="build-chunks={\"projects\":$(./scripts/ci/generate-chunks.sh build)}"
          fi
          echo "$chunks" | tee -a "$GITHUB_OUTPUT"
          echo "nx={\"parallel\":${{ env.NX_PARALLEL }},\"max-parallel\":${{ env.NX_MAX_PARALLEL }}}" | tee -a "$GITHUB_OUTPUT"

  docker-build:
    uses: ./.github/workflows/docker.yml
    needs:
      - prepare
    with:
      projects: ${{ needs.prepare.outputs.affected }}
      build-args: |
        NX_PARALLEL=${{ fromJson(needs.prepare.outputs.nx).parallel }}
        NX_MAX_PARALLEL=${{ fromJson(needs.prepare.outputs.nx).max-parallel }}
        NX_TASKS_RUNNER=ci

  success:
    runs-on: arc-runners
    needs:
      - docker-build
    env:
      needs_results: ${{ needs.*.result }}
      needs: ${{ needs }}
    steps:
      - run: |
          set -x
          echo "$needs_results"
          echo "$needs" | jq -ne '[.[] | select(.result != "success") ] | length == 0'
      - name: Check docker-build success
        run: '[[ ${{ needs.prepare.result }} == "success" ]] || exit 1'
      - name: Announce success
        run: echo "Build is successful"

  # Remove this as a required status check and switch to something more meaningful
  codeowners-check:
    if: false
    name: Lint CODEOWNERS
    runs-on: arc-runners
    env:
      CHECK: 'false'
    steps:
      - name: Codeowners validation
        run: |
          exit 0
