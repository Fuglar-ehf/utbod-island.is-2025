name: Docker Build

on:
  pull_request:
    branches: [main, 'release-*', 'pre-release-*']
  push:
    branches: [main, 'release-*', 'pre-release-*']
  workflow_dispatch:
    inputs:
      projects:
        description: 'Comma-separated list of project names to build.'
        required: true

defaults:
  run:
    shell: bash -euxo pipefail {0}

jobs:
  prepare_matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4

      - name: Create matrix from input
        id: set-matrix
        run: |
          set -x

          echo "matrix=$(git ls-files '**/project.json' |
            xargs cat | \
            jq -s -c '{ include: [
                .[]
                | {
                    project: .name,
                    docker: (.targets | keys | map(select(startswith("docker-"))) | map(sub("^docker-"; "")) | .[])
                  }
              ]
            }')" >>"$GITHUB_OUTPUT"

  build:
    runs-on: ubuntu-latest
    needs: prepare_matrix
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.prepare_matrix.outputs.matrix) }}

    steps:
      - name: Debug inputs
        run: |
          echo "Matrix: ${{ toJSON(matrix) }}"

      - name: Check out repo
        uses: actions/checkout@v3

      - name: Log in to Docker
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.repository }}/${{ matrix.project }}
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: scripts/ci/Dockerfile
          push: ${{ !!env.ACT }}
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ steps.meta.outputs.tags }}
