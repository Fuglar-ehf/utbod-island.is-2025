name: 'Unit Test'
description: 'Run unit tests'
inputs:
  aws-access-key-id:
    required: true
  aws-secret-access-key:
    required: true
  docker-registry:
    required: true
  codecov-token:
    required: true
defaults:
  run:
    shell: bash
runs:
  using: 'composite'
  steps:
    - name: Docker login to ECR repo
      run: ./scripts/ci/docker-login-ecr.sh
      env:
        AWS_ACCESS_KEY_ID: ${{ inputs.aws-access-key-id }}
        AWS_SECRET_ACCESS_KEY: ${{ inputs.aws-secret-access-key }}
        DOCKER_REGISTRY: ${{ inputs.docker-registry }}
    - name: Set Codeconv version numner
      run: |
        echo "CODECOV_REV=v0.3.2" >> $GITHUB_ENV

    - name: Setup yarn
      run: npm install -g yarn

    - uses: actions/setup-node@v2
      with:
        node-version: '18'

      run: npm install -g yarn

    - name: Debug secrets
      env:
        NODE_OPTIONS_SECRET: ${{ secrets.NODE_OPTIONS }}
        SKIP_TESTS_ON_BRANCH: ${{ secrets.SKIP_TESTS_ON_BRANCH }}
      run: |
        echo "NODE_OPTIONS_SECRET: $NODE_OPTIONS_SECRET"
        echo "SKIP_TESTS_ON_BRANCH: $SKIP_TESTS_ON_BRANCH"

    - name: Running tests
      run: ./scripts/ci/run-in-parallel.sh 30_test
      env:
        DOCKER_REGISTRY: ${{ inputs.docker-registry }}
        NODE_OPTIONS: -r dd-trace/ci/init --max-old-space-size=8192
        DD_CIVISIBILITY_AGENTLESS_ENABLED: true
        DD_SITE: datadoghq.eu
        DD_ENV: test-ci
        DD_SERVICE: ci-test
        DD_TRACE_ENABLED: true
        DD_API_KEY: ${{ secrets.DD_API_KEY }}
        CI: true

    - name: Cached codecov uploader
      id: codecov-cache
      uses: actions/cache@v2
      with:
        path: codecov
        key: ${{ runner.os }}-codeconv-${{ env.CODECOV_REV }}

    - name: Fetch codecov uploader
      if: steps.codecov-cache.outputs.cache-hit != 'true'
      run: |
        # Importing pgp keys
        curl https://keybase.io/codecovsecurity/pgp_keys.asc | gpg --no-default-keyring --keyring trustedkeys.gpg --import

        curl -O https://uploader.codecov.io/$CODECOV_REV/linux/codecov
        curl -O https://uploader.codecov.io/$CODECOV_REV/linux/codecov.SHA256SUM

        # Integrity check
        gpgv codecov.SHA256SUM.sig codecov.SHA256SUM
        shasum -a 256 -c codecov.SHA256SUM
        rm codecov.SHA256SUM.sig codecov.SHA256SUM

    - name: Install codecov uploader
      id: codecov
      run: |
        chmod +x codecov

        # Adding codecov uploader to PATH
        mkdir -p "$HOME/.local/bin"
        cp codecov "$HOME/.local/bin/codecov"
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Upload coverage reports
      run: ./scripts/ci/run-in-parallel.sh 50_upload-coverage || true # If for some reason codecov is down, we can still build. This is not a perfect solution though.
      env:
        CODECOV_TOKEN: ${{ inputs.codecov-token }}
