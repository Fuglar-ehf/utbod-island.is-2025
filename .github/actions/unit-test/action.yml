name: 'Unit Test'
description: 'Run unit tests'
inputs:
  aws-access-key-id:
    required: true
  aws-secret-access-key:
    required: true
  docker-registry:
    required: true
  codecov-token:
    required: true
runs:
  using: 'composite'
  steps:
    - name: Docker login to ECR repo
      run: ./scripts/ci/docker-login-ecr.sh
      shell: bash
      env:
        AWS_ACCESS_KEY_ID: ${{ inputs.aws-access-key-id }}
        AWS_SECRET_ACCESS_KEY: ${{ inputs.aws-secret-access-key }}
        DOCKER_REGISTRY: ${{ inputs.docker-registry }}

    - name: Running tests
      run: ./scripts/ci/run-in-parallel.sh 30_test
      shell: bash
      env:
        DOCKER_REGISTRY: ${{ inputs.docker-registry }}

    - name: Install codecov uploader
      run: |
        # Importing pgp keys
        curl https://keybase.io/codecovsecurity/pgp_keys.asc | gpg --no-default-keyring --keyring trustedkeys.gpg --import

        curl -O https://uploader.codecov.io/latest/linux/codecov
        curl -O https://uploader.codecov.io/latest/linux/codecov.SHA256SUM
        curl -O https://uploader.codecov.io/latest/linux/codecov.SHA256SUM.sig

        # Integrity check
        gpgv codecov.SHA256SUM.sig codecov.SHA256SUM
        shasum -a 256 -c codecov.SHA256SUM
        rm codecov.SHA256SUM.sig codecov.SHA256SUM
        chmod +x codecov

        # Adding codecov uploader to PATH
        mkdir -p "$HOME/.local/bin"
        mv codecov "$HOME/.local/bin"
        echo "$HOME/.local/bin" >> $GITHUB_PATH
      shell: bash

    - name: Upload coverage reports
      run: ./scripts/ci/run-in-parallel.sh 50_upload-coverage
      shell: bash
      env:
        CODECOV_TOKEN: ${{ inputs.codecov-token }}
