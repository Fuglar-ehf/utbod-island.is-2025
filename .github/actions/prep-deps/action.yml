name: 'Prep Dependencies'
description: 'Makes sure all dependencies are installed and caches are restored (prereq for load-deps)'
inputs:
  cypress_cache_folder:
    required: true
  generated_files:
    required: true
outputs:
  random-number:
    description: "Random number"
    value: ${{ steps.random-number-generator.outputs.random-number }}
  test_chunks:
    value: ${{ steps.build_info.outputs.TEST_CHUNKS }}
  e2e_chunks:
    value: ${{ steps.build_info.outputs.E2E_CHUNKS }}
  e2e_build_id:
    value: ${{ steps.build_info.outputs.BUILD_ID }}
  build_chunks:
    value: ${{ steps.build_info.outputs.BUILD_CHUNKS }}
  nx_base:
    value: ${{ steps.build_info.outputs.NX_BASE }}
  cache_key:
    value: ${{ steps.set-cache-key.outputs.CACHE_KEY }}
  yarn_cache_folder:
    value: ${{ steps.yarn-cache-dir-path.outputs.dir }}


runs:
  using: 'composite'
  steps:
    - name: Corepack
      shell: bash
      run: corepack enable

    - name: Set cache key
      id: set-cache-key
      shell: bash
      run: |
        echo "CACHE_KEY=${{ runner.os }}-deps-cypress-${{ hashFiles('yarn.lock') }}-1" >> $GITHUB_OUTPUT

    - name: Get Yarn Cache Directory Path
      id: yarn-cache-dir-path
      shell: bash
      run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

    - name: Restore Dependencies Cache
      uses: runs-on/cache/restore@v4
      id: restore-cache
      with:
        path: |
          ${{ steps.yarn-cache-dir-path.outputs.dir }}
          ${{ inputs.CYPRESS_CACHE_FOLDER }}
        key: ${{ steps.set-cache-key.outputs.CACHE_KEY }}

    - name: Yarn
      shell: bash
      run: |
        yarn install --immutable

    - name: Cache Dependencies
      uses: runs-on/cache/save@v4
      if: steps.restore-cache.outputs.cache-hit != 'true'
      with:
        path: |
          ${{ steps.yarn-cache-dir-path.outputs.dir }}
          ${{ inputs.CYPRESS_CACHE_FOLDER }}
        key: ${{ steps.set-cache-key.outputs.CACHE_KEY }}

    - name: Prepare generated files
      shell: bash
      run: |
        echo "generated files: ${{ inputs.generated_files }}"
        node ./scripts/ci/generate-files.mjs ${{ inputs.generated_files }}
        tar -xzvf ${{ inputs.generated_files }}

    - name: Cache Generated files
      uses: runs-on/cache/save@v4
      with:
        path: |
          ${{ inputs.generated_files }}
        key: generated-files-${{ github.sha }}

    - name: Derive appropriate SHAs
      uses: nrwl/nx-set-shas@v4

    - name: Gather branch info
      id: build_info
      shell: bash
      run: |
        export BASE=${{ env.NX_BASE }}
        export HEAD=${{ env.NX_HEAD }}

        echo "TEST_CHUNKS={\"projects\":$(./scripts/ci/generate-chunks.sh test)}" >> "$GITHUB_OUTPUT"
        echo "BUILD_CHUNKS={\"projects\":$(./scripts/ci/generate-chunks.sh build)}" >> "$GITHUB_OUTPUT"
        echo "E2E_CHUNKS={\"projects\":$(./scripts/ci/generate-chunks.sh e2e-ci)}" >> "$GITHUB_OUTPUT"
        echo BUILD_ID="$GITHUB_RUN_ID-$GITHUB_RUN_NUMBER-$(uuidgen)" >> "$GITHUB_OUTPUT"
        echo "NX_BASE=$BASE" >> "$GITHUB_OUTPUT"

