name: 'Checkout for features'
description: 'Checkout refs for feature deployments'
inputs:
  github_token:
    description: 'A Github PAT'
    required: true
  slack_webhook_url:
    description: 'Webhook url for build issues resports'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Get git branch
      shell: bash
      id: git-branch
      run: |
        set -euo pipefail
        GIT_BRANCH="${GITHUB_HEAD_REF:-${GITHUB_REF/refs\/heads\//}}"
        echo GIT_BRANCH="${GIT_BRANCH}" >> "$GITHUB_OUTPUT"
        echo GIT_BRANCH="$GIT_BRANCH" >> "$GITHUB_ENV"

    - name: Generate deployment branch name
      shell: bash
      id: git-branch-deploy
      run: |
        set -euo pipefail
        GIT_BRANCH_DEPLOY="feature/$GIT_BRANCH"
        # Avoid too long resource names
        GIT_BRANCH_DEPLOY="${GIT_BRANCH_DEPLOY:0:50}"

        echo GIT_BRANCH_DEPLOY="${GIT_BRANCH_DEPLOY}" >> "$GITHUB_OUTPUT"
        echo GIT_BRANCH_DEPLOY="$GIT_BRANCH_DEPLOY" >> "$GITHUB_ENV"
        echo FEATURE_NAME="$(echo "$GIT_BRANCH_DEPLOY" | cut -d"/" -f2- | tr -cd '[:alnum:]-' | tr '[:upper:]' '[:lower:]' | cut -c1-50)" >> "$GITHUB_OUTPUT"

    - name: Derive appropriate SHAs
      uses: nrwl/nx-set-shas@v4

    - name: Set envs for features
      shell: bash
      id: git_nx_base
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
        HTML_URL: ${{ github.event.pull_request.html_url }}
        ISSUE_REPORTING_SLACK_WEBHOOK_URL: ${{ inputs.slack_webhook_url }}
      run: |
        set -euo pipefail
        git config --global user.email "ci@island.is"
        git config --global user.name "CI Bot"
        BASE_SHA=${{ env.NX_BASE }}
        HEAD_SHA=${{ env.NX_HEAD }}
        echo "Current base SHA is '$BASE_SHA' and head SHA is '$HEAD_SHA'"
        echo "{\"base_sha\": \"$BASE_SHA\", \"head_sha\":\"$HEAD_SHA\"}" > event.json
