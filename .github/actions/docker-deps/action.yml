name: 'Prepare docker dependencies'
description: 'If yarn.lock has changed we rebuild/push the dockerfile deps layer'
inputs:
  cache_repo:
    description: 'ECR layer cache repo'
    required: false
    default: docker-cache
  docker_registry:
    description: ''
    required: false
    default: 821090935708.dkr.ecr.eu-west-1.amazonaws.com
outputs:
  cache_image:
    description: ''
    value: ${{ steps.set-cache-image.outputs.image }}
runs:
  using: 'composite'
  steps:
    - name: Calculate yarn.lock SHA
      shell: bash
      id: yarn-sha
      run: echo "sha=$(sha256sum yarn.lock | cut -d ' ' -f 1 | head -c 12)" >> $GITHUB_OUTPUT

    - name: Set cache image tag
      shell: bash
      id: cache-tag
      run: echo "tag=deps-${{ steps.yarn-sha.outputs.sha }}" >> $GITHUB_OUTPUT

    - name: Check if deps cache exists
      shell: bash
      id: check-deps-cache
      run: |
        if aws ecr describe-images --repository-name ${{ inputs.cache_repo }} --image-ids imageTag=${{ steps.cache-tag.outputs.tag }} &>/dev/null; then
          echo "cache_exists=true" >> $GITHUB_OUTPUT
        else
          echo "cache_exists=false" >> $GITHUB_OUTPUT
        fi
      continue-on-error: true

    - name: Build and push deps layer
      if: steps.check-deps-cache.outputs.cache_exists != 'true'
      shell: bash
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./scripts/ci/Dockerfile
        push: true
        tags: ${{ inputs.docker_registry }}/${{ inputs.cache_repo }}:${{ steps.cache-tag.outputs.tag }}
        target: deps
        cache-to: type=inline

    - name: Set cache image
      shell: bash
      id: set-cache-image
      run: echo "image=${{ inputs.docker_registry }}/${{ inputs.cache_repo }}:${{ steps.cache-tag.outputs.tag }}" >> $GITHUB_OUTPUT
