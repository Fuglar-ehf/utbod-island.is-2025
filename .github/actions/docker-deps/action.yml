name: 'Prepare docker dependencies'
description: 'If yarn.lock has changed we rebuild/push the dockerfile deps layer'
inputs:
  cache_repo:
    description: 'ECR layer cache repo'
    required: false
    default: docker-cache
  docker_registry:
    description: ''
    required: false
    default: 821090935708.dkr.ecr.eu-west-1.amazonaws.com
  aws_region:
    description: ''
    required: false
    default: eu-west-1
  s3_cache_bucket:
    description: ''
    required: true

outputs:
  cache-prefix:
    description: ''
    value: ${{ steps.cache-prefix.outputs.prefix }}
runs:
  using: 'composite'
  steps:
    - name: Calculate yarn.lock SHA
      shell: bash
      id: yarn-sha
      run: echo "sha=$(sha256sum yarn.lock | cut -d ' ' -f 1 | head -c 11)" >> $GITHUB_OUTPUT

    - name: Set cache image tag
      shell: bash
      id: cache-tag
      run: echo "tag=deps-${{ steps.yarn-sha.outputs.sha }}" >> $GITHUB_OUTPUT

    - name: Set cache prefix
      shell: bash
      id: cache-prefix
      run: echo "prefix=cache/${{ github.repository }}/yarn-${{ steps.yarn-sha.outputs.sha }}" >> $GITHUB_OUTPUT

    - name: Check if deps cache exists
      shell: bash
      id: check-deps-cache
      run: |
        # Check if the directory exists and has content
        content=$(aws s3 ls s3://${{ inputs.s3_cache_bucket }}/${{ steps.cache-prefix.outputs.prefix }}/)
        exists="false"
        if [[ -n "$content" ]]; then
          # If directory has any content, the cache exists
          exists="true"
        fi
        echo "cache exists: $exists"
        echo "cache_exists=$exists" >> $GITHUB_OUTPUT
      continue-on-error: true

    - name: Set up Docker Buildx
      if: steps.check-deps-cache.outputs.cache_exists == 'false'
      id: buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver-opts: |
          image=${{ inputs.docker_registry }}/moby/buildkit:buildx-stable-1
        use: true

    - name: Build and push deps layer
      if: steps.check-deps-cache.outputs.cache_exists == 'false'
      uses: docker/build-push-action@v6
      with:
        context: .
        platforms: linux/amd64
        file: ./scripts/ci/Dockerfile
        target: deps
        cache-from: type=s3,blobs_prefix=${{ steps.cache-prefix.outputs.prefix }}/,manifests_prefix=${{ steps.cache-prefix.outputs.prefix }}/,region=${{ inputs.aws_region }},bucket=${{ inputs.s3_cache_bucket }}
        cache-to: type=s3,blobs_prefix=${{ steps.cache-prefix.outputs.prefix }}/,manifests_prefix=${{ steps.cache-prefix.outputs.prefix }}/,region=${{ inputs.aws_region }},bucket=${{ inputs.s3_cache_bucket }},mode=max
