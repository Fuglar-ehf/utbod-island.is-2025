name: 'Setup yarn'
description: 'Yarn setup and install dependencies. This is our authoritative place to set up Yarn, including setting cache locations etc.'

runs:
  using: 'composite'
  steps:
    - name: Prep env
      shell: bash
      env:
        YARN_CACHE_FOLDER: $HOME/dependencies/.yarn/cache
        CYPRESS_CACHE_FOLDER: $HOME/dependencies/.cache
        COREPACK_HOME: $HOME/dependencies/corepack
        NODE_PATH: $HOME/dependencies/node_modules
        COREPACK_ENABLE_STRICT: 1
      run: |
        for e in YARN_CACHE_FOLDER CYPRESS_CACHE_FOLDER COREPACK_HOME NODE_PATH COREPACK_ENABLE_STRICT; do
          if ! env | grep "^${e}=.*"; then echo "${e} not found in env"; continue; fi
          # Expand home-dirs with string substitution (matches homes at the beginning of the variable)
          p=${!e}
          p=${p/#\$HOME/$HOME}
          p=${p/#\~/$HOME}
          echo "${e}=${p}" | tee -a "$GITHUB_ENV"
        done

    - name: Compare yarn.lock files
      shell: bash
      id: compare_yarn_lock
      run: |
        current=$(sha256sum yarn.lock | awk '{print $1}')
        bundled=$(sha256sum "$HOME/dependencies/yarn.lock" | awk '{print $1}') || echo "Failed reading bundled yarn.lock, ignoring..."
        skip_install=$([ "$current" = "$bundled" ] && echo true || echo false)
        echo "Current hash: $current"
        echo "Bundled hash: $bundled"
        echo "Will skip running 'yarn install' step: $skip_install"
        echo "skip_install=$skip_install" >> $GITHUB_OUTPUT

    - name: Setup Yarn
      shell: bash
      run: |
        # Download (with cache), and install
        corepack install -g || echo "Failed installing corepack, ignoring..."
        # Set shims for e.g. `node`
        corepack enable
        # Verify yarn is available, and see version
        yarn --version

    - name: Run yarn install if yarn.lock changed
      shell: bash
      if: ${{ steps.compare_yarn_lock.outputs.skip_install == 'false' }}
      run: |
        yarn install --immutable
        (
          cp -rf ./node_modules "$HOME/dependencies/node_modules"
          cp -rf ./.yarn "$HOME/dependencies/.yarn"
          cp -rf ./yarn.lock "$HOME/dependencies/yarn.lock"
          cp -rf ./package.json "$HOME/dependencies/package.json"
        ) || echo "Failed copying back to dependencies

    - name: Link pre-installed dependencies
      if: ${{ steps.compare_yarn_lock.outputs.skip_install == 'true' }}
      shell: bash
      run: |
        rm -rf node_modules
        ln -sf "$HOME/dependencies/node_modules" .
        ln -sf "$HOME/dependencies/.yarn/cache" .yarn/
        ln -sf "$HOME/dependencies/.yarn/install-state.gz" .yarn/
        echo "NODE_PATH=$HOME/dependencies/node_modules:$NODE_PATH" >> $GITHUB_ENV
