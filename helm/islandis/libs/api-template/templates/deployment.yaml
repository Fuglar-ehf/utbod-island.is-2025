{{- $fullName := include "api-template.fullname" . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "api-template.fullname" . }}
  {{- if .Values.namespace }}
  namespace: {{ .Values.namespace }}
  {{- end }}
  labels:
    {{- include "api-template.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount.default }}
  selector:
    matchLabels:
      {{- include "api-template.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "api-template.selectorLabels" . | nindent 8 }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: {{ add1 .Values.service.targetPort  | quote }} # The metrics port is +1 on the HTTP service port
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "api-template.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}

      {{- if .Values.initContainer.create }}
      initContainers:
        - name: migration
          image: "{{ .Values.image.repository }}:{{ .Values.global.image.tag }}"
          command: {{ .Values.initContainer.command | toJson }}
          args: {{ .Values.initContainer.args | toJson }}
          env:
            {{- range $key, $value := .Values.global.initContainer.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- with .Values.initContainer }}
            {{- range $key, $value := .env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- range $key, $value := .secrets }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ $fullName }}
                  key: {{ $key }}
            {{- end }}
            {{- end }}
            - name: APP_VERSION
              value: {{ .Values.global.image.tag }}

      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.global.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          env:
            - name: APP_VERSION
              value: {{ .Values.global.image.tag }}
            {{- range $key, $value := .Values.global.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- range $key, $value := .Values.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- range $key, $value := .Values.secrets }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ $fullName }}
                  key: {{ $key }}
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
